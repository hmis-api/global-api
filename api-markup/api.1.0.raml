#%RAML 1.0
title: global-api
version: 1.1.0
mediaType: application/json
protocols:
  - HTTPS
baseUri: 'https://www.hmislynk.com/hmis-clientapi/rest'
resourceTypes:
  collection:
    description: 'Operations performed on the set of all HMIS <<resourcePathName>> within the system, and for adding a new <<resourcePathName|!singularize>> to the set of <<resourcePathName>> '
    get:
      description: 'Searches for <<resourcePathName|!singularize>>.  Returns a list of <<resourcePathName|!singularize>> ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter narrows the search down further.'
      responses:
        '200':
          description: OK – Everything is working.
          body:
            application/json:
              example: <<schema_ids_json_example>>
        '400':
          description: Bad Request – The request was invalid or cannot be served.
        '403':
          description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed.'
        '404':
          description: Not found – There is no resource behind the URI.
        '500':
          description: 500 – Internal Server Error
      queryParameters:
        CreatedAfter:
          description: searches for members of the collection created after (inclusive) a particular date
          example: 10-11-2011
          type: date
        CreatedBefore:
          description: searches for members of the collection created before (inclusive) a particular date
          example: 10-11-2012
          type: date
        UpdatedAfter:
          description: searches for members of the collection updated after (inclusive) a particular date
          example: 10-11-2011
          type: date
        UpdatedBefore:
          description: searches for members of the collection updated before (inclusive) a particular date
          example: 10-11-2012
          type: date
    post:
      description: |
        Add a <<resourcePathName|!singularize>>
      responses:
        '201':
          description: OK - New resource has been created.
          body:
            application/json:
              example: <<id_schema_json_example>>
        '400':
          description: Bad Request – The request was invalid or cannot be served.
        '401':
          description: Unauthorized – The request requires user authentication.
        '403':
          description: 'Forbidden – The server understood the request, but is refusing it or access is not allowed.'
        '404':
          description: Not found – There is no resource behind the URI.
        '422':
          description: Unprocessable Entity - Request body is incorrect.
        '500':
          description: 500 – Internal Server Error.
      body:
        application/json:
          example: <<schema_json_example>>
  member:
    get:
      description: Gets a <<resourcePathName|!singularize>> using a URI resource parameter/ID.
      responses:
        '200':
          description: OK – Everything is working.
          body:
            application/json:
              example: <<schema_id_json_example>>
        '400':
          description: Bad Request – The request was invalid or cannot be served.
        '401':
          description: Unauthorized – The request requires an user authentication.
        '403':
          description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed.'
        '404':
          description: Not found – There is no resource behind the URI.
        '500':
          description: Internal Server Error
    put:
      description: Updates a specific <<resourcePathName|!singularize>> specified by the URI resource parameter/ID.
      responses:
        '200':
          description: OK – Everything is working.
        '304':
          description: Not Modified – The client can use cached data.
        '400':
          description: Bad Request – The request was invalid or cannot be served.
        '401':
          description: Unauthorized – The request requires a user.
        '403':
          description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed.'
        '404':
          description: Not found – There is no resource behind the URI.
        '500':
          description: Internal Server Error.
      body:
        application/json:
          example: <<schema_json_example>>
    delete:
      description: Deletes a specific <<resourcePathName|!singularize>> specified by the URI resource parameter/ID.
      responses:
        '204':
          description: OK – The resource was successfully deleted.
        '400':
          description: Bad Request – The request was invalid or cannot be served.
        '401':
          description: Unauthorized – The request requires user authentication.
        '403':
          description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed.'
        '404':
          description: Not found – There is no resource behind the URI.
        '500':
          description: Internal Server Error.
/search:
  '/{searchentity}':
    get:
      description: |
        The Search API is optimized to find the specific entity you're looking for (e.g., a client, enrollments, etc.).It's designed to  find the one result you're looking for (or maybe the few results you're looking for). Currently hmislynk supporting search on 'clients' entity only. Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs.  HMISLynk Search API provides up to 50 results for each searh. However, the search results can be limited by the client.
          Note: Current suppoerting URI  is /search/clients and /search/projects
      responses:
        '200':
          description: |
            example search response for client search:
              {
                "searchResults": {
                  "pagination": {
                    "total":"2"
                    "from": "0",
                    "maximum": "50",
                    "returned":"2"
                  },
                  "items": [
                    {
                      "clientId": "65e3df62-dd22-4d07-83ef-6858a6322839",
                      "firstName": "Eric",
                      "middleName": "Eric",
                      "lastName": "Eric",
                      "nameSuffix": "NS ",
                      "nameDataQuality": "1",
                      "ssn": "ssn ",
                      "ssnDataQuality": "1",
                      "dob": "1459498034983",
                      "dobDataQuality": "1",
                      "race": "1",
                      "ethnicity": "1",
                      "gender": "1",
                      "otherGender": "Test",
                      "veteranStatus": "8",
                      "link":"/hmis-clientapi/rest/v2015/clients/65e3df62-dd22-4d07-83ef-6858a6322839"
                    },
                    {
                      "clientId": "cf98b9b2-9a77-4133-99a3-b60f05a12ad1",
                      "firstName": "Eric",
                      "middleName": "Eric",
                      "lastName": "Eric",
                      "nameSuffix": "NS ",
                      "nameDataQuality": "1",
                      "ssn": "ssn ",
                      "ssnDataQuality": "1",
                      "dob": "1459498034983",
                      "dobDataQuality": "1",
                      "race": "1",
                      "ethnicity": "1",
                      "gender": "1",
                      "otherGender": "Test",
                      "veteranStatus": "8",
                      "link":"/hmis-clientapi/rest/v2014/clients/cf98b9b2-9a77-4133-99a3-b60f05a12ad1"
                    }
                  ]
                }
              }
                  
            and example search response for projects search:
                
              {
               "searchResults":{
                  "pagination":{
                     "from":0,
                     "returned":1,
                     "total":1,
                     "maximum":50,
                     "sort":{
                        "field":"id",
                        "order":"asc"
                     }
                  },
                  "items":[
                     {
                        "projectId":"066c95d3-c97c-40b9-b8c1-bf12cafdfca4",
                        "projectName":"ProjectName_1459515376900",
                        "projectCommonName":"ProjectCommonName_1459515376900",
                        "continuumProject":0,
                        "projectType":2,
                        "targetPopulation":3,
                        "trackingMethod":0,
                        "schemaYear":2015,
                        "link":"/hmis-clientapi/rest/v2015/projects/066c95d3-c97c-40b9-b8c1-bf12cafdfca4",
                        "projectGroup":"HO0002"
                     }
                  ]
                }
              } 
          body:
            application/json:
              required: false
      queryParameters:
        q:
          description: |
            The search keywords for clients, as well as any qualifiers.Currently supported search fields are first name,middle name,last name,dob,source system id and ssn. For search on "date of birth" field the format MM-dd-YYYY should be used for the search keyword.

            The seach keywords for projects, as well as any qualifiers. Currenly supported search fields are projectName, projectCommonName, projectId.
        sort:
          description: The sort field. Default- results are sorted by "created date".
          example: created date
          type: string
        order:
          description: The sort order if sort parameter is provided. One of asc or desc. Default- desc.
          example: desc
          default: desc
          type: string
        startIndex:
          description: The start Index from where the search results should be returned. Default - 0
          example: 0
          default: 0
          type: integer
        maxItems:
          description: the number or Items that should be included in the results . Default - 50
          example: 50
          default: 50
          type: integer
        exclude:
          description: |
            Excludes flieds from the search.Currently it suppoted value is "ssi" (to exclude source system id) only.
    uriParameters:
      searchentity: {}

