#%RAML 1.0
title: Global Human Services
version: 1.1.0
mediaType: application/json
protocols:
  - HTTPS
baseUri: 'https://www.hmislynk.com/hmis-clientapi/rest'
securedBy: [oauth_2_0]
securitySchemes:
  oauth_2_0: !include security-schemes/oauth_2_0.raml
resourceTypes:
  collection:
    description: 'Operations performed on the set of all HMIS <<resourcePathName>> within the system, and for adding a new <<resourcePathName|!singularize>> to the set of <<resourcePathName>> '
  member:
    get:
      description: |
        The Search API is optimized to find the specific entity you're looking for (e.g., a client, enrollments, etc.).  It's designed to  find the one result you're looking for (or maybe the few results you're looking for). Currently hmislynk supporting search on 'clients' entity only. Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs.  HMISLynk Search API provides up to 50 results for each search.  However, the search results can be limited by the client.  Note: Current supporting URI is /search/clients and /search/projects
      queryParameters:
        q:
         description: |
           The search keywords for clients, as well as any qualifiers.Currently supported search fields are first name,middle name,last name,dob,source system id and ssn. For search on "date of birth" field the format MM-dd-YYYY should be used for the search keyword.
           The seach keywords for projects, as well as any qualifiers. Currenly supported search fields are projectName, projectCommonName, projectId.
        sort:
         description: The sort field. Default- results are sorted by "created date".
         example: created date
         type: string
        order:
         description: The sort order if sort parameter is provided. One of asc or desc. Default- desc.
         example: desc
         default: desc
         type: string
        startIndex:
         description: The start Index from where the search results should be returned. Default - 0
         example: 0
         default: 0
         type: integer
        maxItems:
         description: the number or Items that should be included in the results . Default - 50
         example: 50
         default: 50
         type: integer
        exclude:
         description: |
           Excludes flieds from the search.Currently it suppoted value is "ssi" (to exclude source system id) only.
      responses:
        '200':
          description: OK – Everything is working.
          body:
            application/json:
              required: false
              example: |
                example search response for client search:

                  {
                    "searchResults": {
                      "pagination": {
                        "total":"2"
                        "from": "0",
                        "maximum": "50",
                        "returned":"2"
                      },
                      "items": [
                        {
                          "clientId": "65e3df62-dd22-4d07-83ef-6858a6322839",
                          "firstName": "Eric",
                          "middleName": "Eric",
                          "lastName": "Eric",
                          "nameSuffix": "NS ",
                          "nameDataQuality": "1",
                          "ssn": "ssn ",
                          "ssnDataQuality": "1",
                          "dob": "1459498034983",
                          "dobDataQuality": "1",
                          "race": "1",
                          "ethnicity": "1",
                          "gender": "1",
                          "otherGender": "Test",
                          "veteranStatus": "8",
                          "link":"/hmis-clientapi/rest/v2015/clients/65e3df62-dd22-4d07-83ef-6858a6322839"
                        },
                        {
                          "clientId": "cf98b9b2-9a77-4133-99a3-b60f05a12ad1",
                          "firstName": "Eric",
                          "middleName": "Eric",
                          "lastName": "Eric",
                          "nameSuffix": "NS ",
                          "nameDataQuality": "1",
                          "ssn": "ssn ",
                          "ssnDataQuality": "1",
                          "dob": "1459498034983",
                          "dobDataQuality": "1",
                          "race": "1",
                          "ethnicity": "1",
                          "gender": "1",
                          "otherGender": "Test",
                          "veteranStatus": "8",
                          "link":"/hmis-clientapi/rest/v2014/clients/cf98b9b2-9a77-4133-99a3-b60f05a12ad1"
                        }
                      ]
                    }
                  }

                and example search response for projects search:

                  {
                   "searchResults":{
                      "pagination":{
                         "from":0,
                         "returned":1,
                         "total":1,
                         "maximum":50,
                         "sort":{
                            "field":"id",
                            "order":"asc"
                         }
                      },
                      "items":[
                         {
                            "projectId":"066c95d3-c97c-40b9-b8c1-bf12cafdfca4",
                            "projectName":"ProjectName_1459515376900",
                            "projectCommonName":"ProjectCommonName_1459515376900",
                            "continuumProject":0,
                            "projectType":2,
                            "targetPopulation":3,
                            "trackingMethod":0,
                            "schemaYear":2015,
                            "link":"/hmis-clientapi/rest/v2015/projects/066c95d3-c97c-40b9-b8c1-bf12cafdfca4",
                            "projectGroup":"HO0002"
                         }
                      ]
                    }
                  }
        '400':
          description: Bad Request – The request was invalid or cannot be served.
        '401':
          description: Unauthorized – The request requires an user authentication.
        '403':
          description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed.'
        '404':
          description: Not found – There is no resource behind the URI.
        '500':
          description: Internal Server Error
/search:
  '/{searchentity}':
    type: member
