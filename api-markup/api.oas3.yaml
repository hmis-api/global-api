openapi: 3.0.0
info:
  title: Global Human Services
  version: "1.5.7"
  description: |
       **Note :**
              Please note that the partial updates are supported via PUT APIs. However, Note that If "null" value is passed for any element, in the PUT request body, it will be ignored. An empty string value should be sent (instead of "null" value) for the elements that need to be updated with NULL values.
servers:
  - url: 'https://api.hslynk.com/hmis-globalapi/rest'
paths:
  '/search/{searchentity}':
    get:
      responses:
        '200':
          description: OK â€“ Everything is working.
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "searchResults"
                    ],
                    "properties": {
                      "searchResults": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "items"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object",
                                "required": [
                                  "field",
                                  "order"
                                ],
                                "properties": {
                                  "field": {
                                    "type": "string",
                                  },
                                  "order": {
                                    "type": "string",
                                  }
                                }
                              }
                            }
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "clientId",
                                "dedupClientId",
                                "firstName",
                                "middleName",
                                "lastName",
                                "nameSuffix",
                                "nameDataQuality",
                                "ssn",
                                "ssnDataQuality",
                                "dob",
                                "dobDataQuality",
                                "race",
                                "ethnicity",
                                "gender",
                                "phoneNumber",
                                "emailAddress",
                                "link",
                                "projectGroupCode",
                                "links"
                              ],
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "dedupClientId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "firstName": {
                                  "type": "string",
                                },
                                "middleName": {
                                  "type": "string",
                                },
                                "lastName": {
                                  "type": "string",
                                },
                                "nameSuffix": {
                                  "type": "string",
                                },
                                "nameDataQuality": {
                                  "type": "integer"
                                },
                                "ssn": {
                                  "type": "string",
                                },
                                "ssnDataQuality": {
                                  "type": "integer"
                                },
                                "dob": {
                                  "type": "integer"
                                },
                                "dobDataQuality": {
                                  "type": "integer"
                                },
                                "race": {
                                  "type": "integer"
                                },
                                "ethnicity": {
                                  "type": "integer"
                                },
                                "gender": {
                                  "type": "integer"
                                },
                                "phoneNumber": {
                                  "type": "integer"
                                },
                                "emailAddress": {
                                  "type": "string",
                                },
                                "link": {
                                  "type": "string"
                                },
                                "projectGroupCode": {
                                  "type": "string",
                                },
                                "links": {
                                  "type": "object",
                                  "required": [
                                    "eligibleClients",
                                    "survey.submissions",
                                    "enrollments"
                                  ],
                                  "properties": {
                                    "eligibleClients": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "rel",
                                              "href"
                                            ],
                                            "properties": {
                                              "rel": {
                                                "type": "string",
                                                "format": "uuid",
                                              },
                                              "href": {
                                                "type": "string",
                                                "format": "uuid",
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "survey.submissions": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "rel",
                                              "href"
                                            ],
                                            "properties": {
                                              "rel": {
                                                "type": "string",
                                                "format": "uuid",
                                              },
                                              "href": {
                                                "type": "string",
                                                "format": "uuid",
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "enrollments": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "rel",
                                              "href"
                                            ],
                                            "properties": {
                                              "rel": {
                                                "type": "string",
                                                "format": "uuid",
                                              },
                                              "href": {
                                                "type": "string",
                                                "format": "uuid",
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "globalHouseHolds": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "rel",
                                              "href"
                                            ],
                                            "properties": {
                                              "rel": {
                                                "type": "string",
                                                "format": "uuid",
                                              },
                                              "href": {
                                                "type": "string",
                                                "format": "uuid",
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                    searchResults:
                      pagination:
                        from: 0
                        returned: 1
                        total: 1
                        maximum: 50
                        sort:
                          field: id
                          order: asc
                      items:
                      - clientId: 0f23d93e-23c3-435e-baec-ec267f13f66c
                        dedupClientId: ad9a9390-bcd7-11e9-a57b-02fe61f7863e
                        firstName: Ryan_1565597013222
                        middleName: ''
                        lastName: Peterson_1565597013222
                        nameSuffix: NS
                        nameDataQuality: 1
                        ssn: 123-45-6789
                        ssnDataQuality: 1
                        dob: 340009200000
                        dobDataQuality: 1
                        race: 1
                        ethnicity: 1
                        gender: 0
                        phoneNumber: 123456779
                        emailAddress: test@test.com
                        link: "/hmis-clientapi/rest/v2017/clients/0f23d93e-23c3-435e-baec-ec267f13f66c"
                        projectGroupCode: PG0001
                        links:
                          eligibleClients:
                            data:
                            - rel: 0f23d93e-23c3-435e-baec-ec267f13f66c
                              href: https://api.hslynk.com/house-matching-api/rest/eligibleclients/0f23d93e-23c3-435e-baec-ec267f13f66c
                          survey.submissions:
                            data:
                            - rel: 528faca1-ccb6-436a-bd97-8cd6e00c5105
                              href: https://api.hslynk.com/survey-api/rest/clients/0f23d93e-23c3-435e-baec-ec267f13f66c/surveys/5d3f239c-fdf5-4806-80ec-54886fb58e2b/submissions/528faca1-ccb6-436a-bd97-8cd6e00c5105
                          enrollments:
                            data:
                            - rel: d9845282-afd5-43e8-8935-1ae186a04dea
                              href: https://api.hslynk.com/hmis-clientapi-v2017/rest/clients/0f23d93e-23c3-435e-baec-ec267f13f66c/enrollments/d9845282-afd5-43e8-8935-1ae186a04dea
                          globalHouseHolds:
                               data:
                               - rel: ad19a8b1-337e-4b1b-bd3d-d69681862200
                                 href: https://api.hslynk.com/hmis-globalapi/rest/globalhouseholds/ad19a8b1-337e-4b1b-bd3d-d69681862200                               

        '400':
          description: Bad Request â€“ The request was invalid or cannot be served.
        '401':
          description: Unauthorized â€“ The request requires an user authentication.
        '403':
          description: >-
            Forbidden â€“ The server understood the request, but is refusing it or
            the access is not allowed.
        '404':
          description: Not found â€“ There is no resource behind the URI.
        '500':
          description: Internal Server Error
      description: >
        The Search API is optimized to find the specific entity you're looking
        for (e.g., a client, enrollments, etc.).  It's designed to  find the one
        result you're looking for (or maybe the few results you're looking for).
        Currently hmislynk supporting search on 'clients' entity only. Just like
        searching on Google, you sometimes want to see a few pages of search
        results so that you can find the item that best meets your needs.
        HMISLynk Search API provides up to 50 results for each search. 
            API for client search returns the following in the response.  \
            \
            * Latest (by effective date) FN, MI, LN, email, phone [email and phone will come from the generic client record], SSN, DOB, SSN, gender, veteran status.If any of these have not been collected, those elements will be simply omitted. \
            * Links to enrollments for all HMIS enrollment records if there is anything to retrieve. Otherwise this link is not present.\
            * Links to all client survey submissions,if there is anything to retrieve. Otherwise this link is not present\
            * Links to all eligible client records (active list) for the client ,if there is anything to retrieve. Otherwise this link is not present \
            * Links to all global holds records for the client ,if there is anything to retrieve. Otherwise this link is not present \            
            \
                 For the client search, the value for the request parameter "q" can be first name , last name , middle name, date of birth ,source system Id or SSN\
                 \
                  Here are different examples to perform a search using the API.  \
                  \
                  Search for clients with first name "Jim"  \
                  https://api.hslynk.com/hmis-clientapi/rest/search/clients?q=123-45-6789 \
                  \
                  Search for a client with SSN "123-45-6789"  \
                  https://api.hslynk.com/hmis-clientapi/rest/search/clients?q=123-45-6789  \
                  \
                  Search for a client with client Id "c06ff484-42bb-4946-82f7-0d4118013cd6" \
                  https://api.hslynk.com/hmis-clientapi/rest/search/clients?q=c06ff484-42bb-4946-82f7-0d4118013cd6 \
                  \
                  Search for a client with  dedup Id "c06ff484-42bb-4946-82f7-0d4118013cd6"  \
                  https://api.hslynk.com/hmis-clientapi/rest/search/clients?q=bda3179b-c49f-449d-95b9-1ca014ae0345 \
                  \
                  Search for clients with first name or last name or full name "Jim"   \
                  https://api.hslynk.com/hmis-clientapi/rest/search/clients?q=Jim  \
                  \
                  Search for clients with with date of birth (allowed DOB format MM-dd-YYYY)\
                  https://api.hslynk.com/hmis-clientapi/rest/search/clients?q=05-28-1980 \
                  \
                  Optionally, the results can be sorted by passing "sort" and "order" paramters for the search request. \
                  To search for clients with search string "Jim" sorder by Last name in descending order you can use the following \
                  https://api.hslynk.com/hmis-clientapi/rest/search/clients?q=Jim&sort=lastName
                  \
                  \
                  Sorting is allowed on the following parameters. The value for the "sort" field should match one of the following. By default results are sorted by first name.
                   "firstName", \
                   "lastName", \
                   "middleName", \
                   "sourceSystemId", \
                   "ssn" \
                   \
                  The maximum results that can be obtained in a search API call is 50. "startIndex" and "maxItems" can be passed to the search request to limit the number of rows. These parameters are used for pagination purposes. 
                  
              
      operationId: GET_search-searchentity
      parameters:
        - name: q
          in: query
          required: true
          description: >
            The search keywords for clients, as well as any qualifiers.Currently
            supported search fields are first name,middle name,last
            name,dob,source system id and ssn. For search on "date of birth"
            field the format MM-dd-YYYY should be used for the search keyword.

          schema:
            type: string
        - name: sort
          in: query
          required: false
          description: The sort field.Supported sort values are firstName,lastName,middleName,sourceSystemId,ssn.  Default- results are sorted by "firstName".
          schema:
            type: string
        - name: order
          in: query
          required: false
          description: >-
            The sort order if sort parameter is provided. One of asc or desc.
            Default- asc.
          schema:
            default: desc
            type: string
        - name: startIndex
          in: query
          required: false
          description: >-
            The start Index from where the search results should be returned.
            Default - 0
          schema:
            default: 0
            type: integer
        - name: maxItems
          in: query
          required: false
          description: >-
            the number or Items that should be included in the results . Default
            - 50
          schema:
            default: 50
            type: integer
        - name: exclude
          in: query
          required: false
          description: >
            Excludes flieds from the search.Currently it suppoted value is "ssi"
            (to exclude source system id) only.
          schema:
            type: string
    parameters:
      - name: searchentity
        in: path
        required: true
        schema:
          type: string
  /globalprojects:
    post:
      description: Create a global project
      operationId: POST_global-projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  globalProject:
                    type: object
                    properties:
                      projectName:
                        type: string
                      projectCommonName:
                        type: string
                      description:
                        type: string
                      projects:
                        type: object
                        properties:
                          projects:
                            type: array
                            items:
                              type: object
                              properties:
                                projectId:
                                  type: string
                                  format: uuid
                                source:
                                  type: string

            example: 
                globalProject:
                  projectName: Project Name
                  projectCommonName: Project common name
                  description: " description"
                  projects:
                    projects:
                    - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                      source: '2015'
                    - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                      source: '2014'
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProject"
                    ],
                    "properties": {
                      "globalProject": {
                        "type": "object",
                        "required": [
                          "id",
                          "projectName",
                          "projectCommonName",
                          "description",
                          "sourceSystemId",
                          "projects"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "projectName": {
                            "type": "string",
                          },
                          "projectCommonName": {
                            "type": "string",
                          },
                          "description": {
                            "type": "string",
                          },
                          "sourceSystemId": {
                            "type": "string",
                          },
                          "projects": {
                            "type": "object",
                            "required": [
                              "projects"
                            ],
                            "properties": {
                              "projects": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "projectId",
                                    "source"
                                  ],
                                  "properties": {
                                    "projectId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProject:
                    id: 661189b2-183f-4d03-aba0-7d3050b62a5f
                    projectName: Project Name
                    projectCommonName: Project common name
                    description: description
                    sourceSystemId: source123
                    projects:
                      projects:
                        - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                          source: 2015
                        - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                          source: 2014
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProjects"
                    ],
                    "properties": {
                      "globalProjects": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalProjects"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalProjects": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "projectName",
                                "projectCommonName",
                                "description",
                                "sourceSystemId",
                                "projects"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "projectName": {
                                  "type": "string",
                                },
                                "projectCommonName": {
                                  "type": "string",
                                },
                                "description": {
                                  "type": "string",
                                },
                                "sourceSystemId": {
                                  "type": "string",
                                },
                                "projects": {
                                  "type": "object",
                                  "required": [
                                    "projects"
                                  ],
                                  "properties": {
                                    "projects": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "projectId",
                                          "source",
                                          "link"
                                        ],
                                        "properties": {
                                          "projectId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "source": {
                                            "type": "string",
                                          },
                                          "link": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProjects:
                    pagination:
                      from: 0
                      returned: 2
                      total: 2
                      maximum: 30
                      sort: {}
                    globalProjects:
                      - id: 38d97c40-ef8f-465a-9ede-d8933385c0ed
                        projectName: name
                        projectCommonName: common name
                        description: description
                        sourceSystemId: source123
                        projects:
                          projects:
                            - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                              source: '2015'
                              link: >-
                                /hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f
                            - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                              source: '2014'
                              link: >-
                                /hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                            - projectId: 9d278142-978d-461e-8aea-07d629e462e8
                              source: '2014'
                              link: >-
                                /hmis-clientapi/v2014/rest/projects/9d278142-978d-461e-8aea-07d629e462e8
                      - id: d0242f55-c019-41c2-8f0c-6dadbb38c875
                        projectName: Project Name
                        projectCommonName: Project common name
                        description: ' description'
                        sourceSystemId: source124
                        projects:
                          projects:
                            - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                              source: '2015'
                              link: >-
                                /hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f
                            - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                              source: '2014'
                              link: >-
                                /hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61
      description: Get all global projects
      operationId: GET_global-projects
  '/globalprojects/{globalprojectid}':
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProject"
                    ],
                    "properties": {
                      "globalProject": {
                        "type": "object",
                        "required": [
                          "projectId",
                          "projectName",
                          "projectCommonName",
                          "description"
                        ],
                        "properties": {
                          "projectId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "projectName": {
                            "type": "string",
                          },
                          "projectCommonName": {
                            "type": "string",
                          },
                          "description": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProject:
                    projectId: 3d65a9bc-af57-4e3e-bc4d-29d661767ac9
                    projectName: Sample Project Name
                    projectCommonName: Sample Project Common Name
                    description: Sample Project description
      description: Update selected global project
      operationId: PUT_global-projects-globalprojectid
      requestBody:
        content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "globalProject"
                ],
                "properties": {
                  "globalProject": {
                    "type": "object",
                    "required": [
                      "projectName",
                      "projectCommonName",
                      "description"
                    ],
                    "properties": {
                      "projectName": {
                        "type": "string",
                      },
                      "projectCommonName": {
                        "type": "string",
                      },
                      "description": {
                        "type": "string",
                      }
                    }
                  }
                }
              }
            example:
              globalProject:
                projectName: Sample Project Name
                projectCommonName: Sample Project Common Name
                description: Sample Project description
        required: true
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProject"
                    ],
                    "properties": {
                      "globalProject": {
                        "type": "object",
                        "required": [
                          "id",
                          "projectName",
                          "projectCommonName",
                          "description",
                          "projects"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "projectName": {
                            "type": "string",
                          },
                          "projectCommonName": {
                            "type": "string",
                          },
                          "description": {
                            "type": "string",
                          },
                          "projects": {
                            "type": "object",
                            "required": [
                              "projects"
                            ],
                            "properties": {
                              "projects": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "projectId",
                                    "source",
                                    "link"
                                  ],
                                  "properties": {
                                    "projectId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "string",
                                    },
                                    "link": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProject:
                    id: d0242f55-c019-41c2-8f0c-6dadbb38c875
                    projectName: Project Name
                    projectCommonName: Project common name
                    description: ' description'
                    projects:
                      projects:
                        - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                          source: '2015'
                          link: >-
                            /hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f
                        - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                          source: '2014'
                          link: >-
                            /hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61
      description: Get selected global project
      operationId: GET_global-projects-globalprojectid
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
  '/globalprojects/{globalprojectid}/projects':
    put:
      responses:
        '200':
          description: ''
      description: Add projects to selected global project
      operationId: PUT_global-projects-globalprojectid-projects
      requestBody:
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "projects"
                  ],
                  "properties": {
                    "projects": {
                      "type": "object",
                      "required": [
                        "projects"
                      ],
                      "properties": {
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "projectId",
                              "source"
                            ],
                            "properties": {
                              "projectId": {
                                "type": "string",
                                "format": "uuid",
                              },
                              "source": {
                                "type": "integer",
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                projects:
                  projects:
                  -  projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                     source: 2015
                  -  projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                     source: '2014'
        required: true
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
  '/globalprojects/{globalprojectid}/projects/{projectid}':
    delete:
      responses:
        '200':
          description: ''
      description: Remove project from selected global project
      operationId: DELETE_global-projects-globalprojectid-projects-projectId
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
      - name: projectid
        in: path
        required: true
        schema:
          type: string
  '/globalprojects/{globalprojectid}/users':
    put:
      responses:
        default:
          description: ''
      description: Add users to a global project
      operationId: PUT_global-projects-$globalProjectId-users
      requestBody:
        content:
          application/json:
            example:
              users:
                users:
                  - userId: 8b6c6ef2-87c7-47f0-8874-4cca6f09367c
                  - userId: 8b6c6ef2-87c7-47f0-8874-4cca6f09365c
                  - userId: 183548a8-4f0e-4b3d-a114-c1e3043cf49d
            schema:
              {
                "type": "object",
                "required": [
                  "users"
                ],
                "properties": {
                  "users": {
                    "type": "object",
                    "required": [
                      "users"
                    ],
                    "properties": {
                      "users": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "userId"
                          ],
                          "properties": {
                            "userId": {
                              "type": "string",
                              "format": "uuid",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "users"
                    ],
                    "properties": {
                      "users": {
                        "type": "object",
                        "required": [
                          "users"
                        ],
                        "properties": {
                          "users": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "userId",
                                "username",
                                "emailAddress",
                                "firstName",
                                "middleName",
                                "lastName",
                                "gender",
                                "status",
                                "link"
                              ],
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "username": {
                                  "type": "string",
                                },
                                "emailAddress": {
                                  "type": "string",
                                },
                                "firstName": {
                                  "type": "string",
                                },
                                "middleName": {
                                  "type": "string",
                                },
                                "lastName": {
                                  "type": "string",
                                },
                                "gender": {
                                  "type": "integer"
                                },
                                "status": {
                                  "type": "string",
                                },
                                "link": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  users:
                    users:
                      - userId: 8b6c6ef2-87c7-47f0-8874-4cca6f09367c
                        username: developeradmin@hmis.com
                        emailAddress: hmisprojects@gmail.com
                        firstName: Developer Admin
                        middleName: Developer Admin
                        lastName: Developer Admin
                        gender: 0
                        status: ACTIVE
                        link: >-
                          /hmis-user-service/rest/accounts/8b6c6ef2-87c7-47f0-8874-4cca6f09367c
                      - userId: 183548a8-4f0e-4b3d-a114-c1e3043cf49d
                        username: tes11tq@te42223s.com
                        emailAddress: test@test.com
                        firstName: First NameTest
                        middleName: Middle name
                        lastName: Last Name
                        gender: 0
                        status: ACTIVE
                        link: >-
                          /hmis-user-service/rest/accounts/183548a8-4f0e-4b3d-a114-c1e3043cf49d
      description: Retrive a global project users
      operationId: GET_global-projects-$globalProjectId-users
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
  '/globalprojects/{globalprojectid}/users/{userid}':
    delete:
      responses:
        default:
          description: ''
      description: Remove users from a global project
      operationId: DELETE_global-projects-$globalProjectId-users-userId
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
      - name: userid
        in: path
        required: true
        schema:
          type: string
  /global-projects:
    post:
      deprecated: true
      description: Create a global project
      operationId: POST_dep_global-projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                globalProject:
                  type: object
                  properties:
                    id:
                      type: string
                    projectName:
                      type: string
                    projectCommonName:
                      type: string
                    description:
                      type: string
                    sourceSystemId:
                      type: string
                  required:
                    - id
                    - projectName
                    - projectCommonName
                    - description
                    - sourceSystemId
              required:
                - globalProject
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProject"
                    ],
                    "properties": {
                      "globalProject": {
                        "type": "object",
                        "required": [
                          "id",
                          "projectName",
                          "projectCommonName",
                          "description",
                          "sourceSystemId",
                          "projects"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "projectName": {
                            "type": "string",
                          },
                          "projectCommonName": {
                            "type": "string",
                          },
                          "description": {
                            "type": "string",
                          },
                          "sourceSystemId": {
                            "type": "string",
                          },
                          "projects": {
                            "type": "object",
                            "required": [
                              "projects"
                            ],
                            "properties": {
                              "projects": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "projectId",
                                    "source"
                                  ],
                                  "properties": {
                                    "projectId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProject:
                    id: 661189b2-183f-4d03-aba0-7d3050b62a5f
                    projectName: Project Name
                    projectCommonName: Project common name
                    description: description
                    sourceSystemId: source123
                    projects:
                      projects:
                        - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                          source: 2015
                        - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                          source: 2014
    get:
      deprecated: true
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProjects"
                    ],
                    "properties": {
                      "globalProjects": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalProjects"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalProjects": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "projectName",
                                "projectCommonName",
                                "description",
                                "sourceSystemId",
                                "projects"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "projectName": {
                                  "type": "string",
                                },
                                "projectCommonName": {
                                  "type": "string",
                                },
                                "description": {
                                  "type": "string",
                                },
                                "sourceSystemId": {
                                  "type": "string",
                                },
                                "projects": {
                                  "type": "object",
                                  "required": [
                                    "projects"
                                  ],
                                  "properties": {
                                    "projects": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "projectId",
                                          "source",
                                          "link"
                                        ],
                                        "properties": {
                                          "projectId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "source": {
                                            "type": "string",
                                          },
                                          "link": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProjects:
                    pagination:
                      from: 0
                      returned: 2
                      total: 2
                      maximum: 30
                      sort: {}
                    globalProjects:
                      - id: 38d97c40-ef8f-465a-9ede-d8933385c0ed
                        projectName: name
                        projectCommonName: common name
                        description: description
                        sourceSystemId: source123
                        projects:
                          projects:
                            - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                              source: '2015'
                              link: >-
                                /hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f
                            - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                              source: '2014'
                              link: >-
                                /hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                            - projectId: 9d278142-978d-461e-8aea-07d629e462e8
                              source: '2014'
                              link: >-
                                /hmis-clientapi/v2014/rest/projects/9d278142-978d-461e-8aea-07d629e462e8
                      - id: d0242f55-c019-41c2-8f0c-6dadbb38c875
                        projectName: Project Name
                        projectCommonName: Project common name
                        description: ' description'
                        sourceSystemId: source124
                        projects:
                          projects:
                            - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                              source: '2015'
                              link: >-
                                /hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f
                            - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                              source: '2014'
                              link: >-
                                /hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61
      description: Get all global projects
      operationId: GET_dep_global-projects
  '/global-projects/{globalprojectid}':
    put:
      deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProject"
                    ],
                    "properties": {
                      "globalProject": {
                        "type": "object",
                        "required": [
                          "projectId",
                          "projectName",
                          "projectCommonName",
                          "description"
                        ],
                        "properties": {
                          "projectId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "projectName": {
                            "type": "string",
                          },
                          "projectCommonName": {
                            "type": "string",
                          },
                          "description": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProject:
                    projectId: 3d65a9bc-af57-4e3e-bc4d-29d661767ac9
                    projectName: Sample Project Name
                    projectCommonName: Sample Project Common Name
                    description: Sample Project description
      description: Update selected global project
      operationId: PUT_dep_global-projects-globalprojectid
      requestBody:
        content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "globalProject"
                ],
                "properties": {
                  "globalProject": {
                    "type": "object",
                    "required": [
                      "projectName",
                      "projectCommonName",
                      "description"
                    ],
                    "properties": {
                      "projectName": {
                        "type": "string",
                      },
                      "projectCommonName": {
                        "type": "string",
                      },
                      "description": {
                        "type": "string",
                      }
                    }
                  }
                }
              }
            example:
              globalProject:
                projectName: Sample Project Name
                projectCommonName: Sample Project Common Name
                description: Sample Project description
        required: true
    get:
      deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalProject"
                    ],
                    "properties": {
                      "globalProject": {
                        "type": "object",
                        "required": [
                          "id",
                          "projectName",
                          "projectCommonName",
                          "description",
                          "projects"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "projectName": {
                            "type": "string",
                          },
                          "projectCommonName": {
                            "type": "string",
                          },
                          "description": {
                            "type": "string",
                          },
                          "projects": {
                            "type": "object",
                            "required": [
                              "projects"
                            ],
                            "properties": {
                              "projects": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "projectId",
                                    "source",
                                    "link"
                                  ],
                                  "properties": {
                                    "projectId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "string",
                                    },
                                    "link": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalProject:
                    id: d0242f55-c019-41c2-8f0c-6dadbb38c875
                    projectName: Project Name
                    projectCommonName: Project common name
                    description: ' description'
                    projects:
                      projects:
                        - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                          source: '2015'
                          link: >-
                            /hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f
                        - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                          source: '2014'
                          link: >-
                            /hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61
      description: Get selected global project
      operationId: GET_dep_global-projects-globalprojectid
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
  '/global-projects/{globalprojectid}/projects':
    put:
      deprecated: true
      responses:
        '200':
          description: ''
      description: Add projects to selected global project
      operationId: PUT_dep_global-projects-globalprojectid-projects
      requestBody:
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "projects"
                  ],
                  "properties": {
                    "projects": {
                      "type": "object",
                      "required": [
                        "projects"
                      ],
                      "properties": {
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "projectId",
                              "source"
                            ],
                            "properties": {
                              "projectId": {
                                "type": "string",
                                "format": "uuid",
                              },
                              "source": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                projects:
                  projects:
                  -  projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                     source: 2015
                  -  projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                     source: '2014'
        required: true
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
  '/global-projects/{globalprojectid}/projects/{projectid}':
    delete:
      deprecated: true
      responses:
        '200':
          description: ''
      description: Remove project from selected global project
      operationId: DELETE_dep_global-projects-globalprojectid-projects-projectId
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
      - name: projectid
        in: path
        required: true
        schema:
          type: string
  '/global-projects/{globalprojectid}/users':
    put:
      deprecated: true
      responses:
        default:
          description: ''
      description: Add users to a global project
      operationId: PUT_dep_global-projects-$globalProjectId-users
      requestBody:
        content:
          application/json:
            example:
              users:
                users:
                  - userId: 8b6c6ef2-87c7-47f0-8874-4cca6f09367c
                  - userId: 8b6c6ef2-87c7-47f0-8874-4cca6f09365c
                  - userId: 183548a8-4f0e-4b3d-a114-c1e3043cf49d
            schema:
              {
                "type": "object",
                "required": [
                  "users"
                ],
                "properties": {
                  "users": {
                    "type": "object",
                    "required": [
                      "users"
                    ],
                    "properties": {
                      "users": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "userId"
                          ],
                          "properties": {
                            "userId": {
                              "type": "string",
                              "format": "uuid",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    get:
      deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "users"
                    ],
                    "properties": {
                      "users": {
                        "type": "object",
                        "required": [
                          "users"
                        ],
                        "properties": {
                          "users": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "userId",
                                "username",
                                "emailAddress",
                                "firstName",
                                "middleName",
                                "lastName",
                                "gender",
                                "status",
                                "link"
                              ],
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "username": {
                                  "type": "string",
                                },
                                "emailAddress": {
                                  "type": "string",
                                },
                                "firstName": {
                                  "type": "string",
                                },
                                "middleName": {
                                  "type": "string",
                                },
                                "lastName": {
                                  "type": "string",
                                },
                                "gender": {
                                  "type": "integer"
                                },
                                "status": {
                                  "type": "string",
                                },
                                "link": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  users:
                    users:
                      - userId: 8b6c6ef2-87c7-47f0-8874-4cca6f09367c
                        username: developeradmin@hmis.com
                        emailAddress: hmisprojects@gmail.com
                        firstName: Developer Admin
                        middleName: Developer Admin
                        lastName: Developer Admin
                        gender: 0
                        status: ACTIVE
                        link: >-
                          /hmis-user-service/rest/accounts/8b6c6ef2-87c7-47f0-8874-4cca6f09367c
                      - userId: 183548a8-4f0e-4b3d-a114-c1e3043cf49d
                        username: tes11tq@te42223s.com
                        emailAddress: test@test.com
                        firstName: First NameTest
                        middleName: Middle name
                        lastName: Last Name
                        gender: 0
                        status: ACTIVE
                        link: >-
                          /hmis-user-service/rest/accounts/183548a8-4f0e-4b3d-a114-c1e3043cf49d
      description: Retrive a global project users
      operationId: GET_dep_global-projects-$globalProjectId-users
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
  '/global-projects/{globalprojectid}/users/{userid}':
    delete:
      deprecated: true
      responses:
        default:
          description: ''
      description: Remove users from a global project
      operationId: DELETE_dep_global-projects-$globalProjectId-users-userId
    parameters:
      - name: globalprojectid
        in: path
        required: true
        schema:
          type: string
      - name: userid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/globalenrollments':
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollment"
                    ],
                    "properties": {
                      "globalEnrollment": {
                        "type": "object",
                        "required": [
                          "id",
                          "dedupClientId",
                          "enrollments"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "dedupClientId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "enrollments": {
                            "type": "object",
                            "required": [
                              "enrollments"
                            ],
                            "properties": {
                              "enrollments": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enrollmentId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "clientId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "string",
                                    },
                                    "link": {
                                      "type": "string"
                                    },
                                    "genericEnrollmentId":{
                                      "type": "string",
                                      "format": "uuid"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollment:
                    id: bcd68553-08a0-4463-8713-3619f1022fc1
                    dedupClientId: b3f60ea0-79a9-11e6-ab44-02f305dabccf
                    enrollments:
                      enrollments:
                        - enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                          clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                          source: '2016'
                          link: >-
                            hmis-clientapi/v2016/rest/clients/6bf95840-8567-469b-9efe-8c6351294e55/enrollments/637fbfbb-e75c-49f1-900f-1aa0015aefab
                        - enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                          clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                          source: '2015'
                          link: >-
                            hmis-clientapi/v2015/rest/clients/d4a9b184-21ea-4136-b9b8-0d59e8ee7b71/enrollments/d12a5b43-9411-4fe3-8cd3-0778459d0085
                        - genericEnrollmentId: 9ac8cba4-d9a0-43c3-ae3f-3b2633a91626    
      description: Create a global enrollment for a client
      operationId: POST_clients-clientDedupId-global-enrollments
      requestBody:
        content:
          application/json:
            example:
              globalEnrollment:
                enrollments:
                  enrollments:
                    - enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                      source: '2016'
                      clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                    - enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                      source: '2015'
                      clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                    - genericEnrollmentId: 9ac8cba4-d9a0-43c3-ae3f-3b2633a91626  
            schema:
              {
                "type": "object",
                "required": [
                  "enrollments"
                ],
                "properties": {
                  "enrollments": {
                    "type": "object",
                    "required": [
                      "enrollments"
                    ],
                    "properties": {
                      "enrollments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enrollmentId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "source": {
                              "type": "string",
                            },
                            "clientId": {
                              "type": "string",
                              "format": "uuid",
                            },                                    "genericEnrollmentId":{
                                      "type": "string",
                                      "format": "uuid"
                                    }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollments"
                    ],
                    "properties": {
                      "globalEnrollments": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalEnrollments"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalEnrollments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "dedupClientId",
                                "enrollments"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "dedupClientId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "enrollments": {
                                  "type": "object",
                                  "required": [
                                    "enrollments"
                                  ],
                                  "properties": {
                                    "enrollments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "enrollmentId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "source": {
                                            "type": "string",
                                          },
                                          "genericEnrollmentId":{
                                              "type": "string",
                                              "format": "uuid"
                                          },
                                          "link": {
                                            "type": "string",
                                            "format": "uuid",
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollments:
                    pagination:
                      from: 0
                      returned: 1
                      total: 1
                      maximum: 30
                      sort: {}
                    globalEnrollments:
                      - id: a2919645-c366-49b9-a101-3b803fa15d3d
                        dedupClientId: b3f60ea0-79a9-11e6-ab44-02f305dabccf
                        enrollments:
                          enrollments:
                            - id: 0ffdf949-b799-43d3-82ca-506478274a74
                              enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                              clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                              source: '2016'
                              link: >-
                                hmis-clientapi/v2016/rest/clients/6bf95840-8567-469b-9efe-8c6351294e55/enrollments/637fbfbb-e75c-49f1-900f-1aa0015aefab
                            - id: 183b0b94-9d14-44ad-ad98-9408b328230d
                              enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                              clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                              source: '2015'
                              link: >-
                                hmis-clientapi/v2015/rest/clients/d4a9b184-21ea-4136-b9b8-0d59e8ee7b71/enrollments/d12a5b43-9411-4fe3-8cd3-0778459d0085
                            - genericEnrollmentId: 9ac8cba4-d9a0-43c3-ae3f-3b2633a91626    
      description: Get all global enrollment
      operationId: GET_clients-clientDedupId-global-enrollments
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/globalenrollments/{globalenrollmentid}':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollment"
                    ],
                    "properties": {
                      "globalEnrollment": {
                        "type": "object",
                        "required": [
                          "id",
                          "dedupClientId",
                          "enrollments"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "dedupClientId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "enrollments": {
                            "type": "object",
                            "required": [
                              "enrollments"
                            ],
                            "properties": {
                              "enrollments": {
                                "type": "array",
                                "items": {
                                  "type": "object",

                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "enrollmentId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "clientId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "string",
                                    },                                    "genericEnrollmentId":{
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "link": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollment:
                    id: a2919645-c366-49b9-a101-3b803fa15d3d
                    dedupClientId: b3f60ea0-79a9-11e6-ab44-02f305dabccf
                    enrollments:
                      enrollments:
                        - id: 0ffdf949-b799-43d3-82ca-506478274a74
                          enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                          clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                          source: '2016'
                          link: >-
                            hmis-clientapi/v2016/rest/clients/6bf95840-8567-469b-9efe-8c6351294e55/enrollments/637fbfbb-e75c-49f1-900f-1aa0015aefab
                        - id: 183b0b94-9d14-44ad-ad98-9408b328230d
                          enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                          clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                          source: '2015'
                          link: >-
                            hmis-clientapi/v2015/rest/clients/d4a9b184-21ea-4136-b9b8-0d59e8ee7b71/enrollments/d12a5b43-9411-4fe3-8cd3-0778459d0085
                        - genericEnrollmentId: 9ac8cba4-d9a0-43c3-ae3f-3b2633a91626
      description: Get selected global enrollment
      operationId: GET_clients-clientDedupId-global-enrollments-globalenrollmentid
    delete:
      responses:
        default:
          description: ''
      description: Delete selected global enrollment
      operationId: DELETE_clients-clientDedupId-global-enrollments-globalenrollmentid
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
      - name: globalenrollmentid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/globalenrollments/{globalenrollmentid}/enrollments':
    put:
      responses:
        '200':
          description: ''
      description: Add enrollment to selected global enrollment
      operationId: >-
        PUT_clients-clientDedupId-global-enrollments-globalenrollmentid-enrollments
      requestBody:
        content:
          application/json:
            example:
              enrollments:
                enrollments:
                  - enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                    source: '2016'
                    clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                  - enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                    source: '2015'
                    clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                  - genericEnrollmentId: 9ac8cba4-d9a0-43c3-ae3f-3b2633a91626                    
            schema:
              {
                "type": "object",
                "required": [
                  "enrollments"
                ],
                "properties": {
                  "enrollments": {
                    "type": "object",
                    "required": [
                      "enrollments"
                    ],
                    "properties": {
                      "enrollments": {
                        "type": "array",
                        "items": {
                          "type": "object",

                          "properties": {
                            "enrollmentId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "source": {
                              "type": "string",
                            },
                            "clientId": {
                              "type": "string",
                              "format": "uuid",
                            } ,                                   "genericEnrollmentId":{
                                      "type": "string",
                                      "format": "uuid"
                                    }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
      - name: globalenrollmentid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/globalenrollments/{globalenrollmentid}/enrollments/{enrollmentid}':
    delete:
      responses:
        '200':
          description: ''
      description: Remove enrollment from selected global enrollment
      operationId: >-
        DELETE_clients-clientDedupId-global-enrollments-globalenrollmentid-enrollments-enrollmentId
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
      - name: globalenrollmentid
        in: path
        required: true
        schema:
          type: string
      - name: enrollmentid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/global-enrollments':
    post:
      deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollment"
                    ],
                    "properties": {
                      "globalEnrollment": {
                        "type": "object",
                        "required": [
                          "id",
                          "dedupClientId",
                          "enrollments"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "dedupClientId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "enrollments": {
                            "type": "object",
                            "required": [
                              "enrollments"
                            ],
                            "properties": {
                              "enrollments": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "enrollmentId",
                                    "clientId",
                                    "source",
                                    "link"
                                  ],
                                  "properties": {
                                    "enrollmentId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "clientId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "string",
                                    },
                                    "link": {
                                      "type": "string",
                                      "format": "uuid",
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollment:
                    id: bcd68553-08a0-4463-8713-3619f1022fc1
                    dedupClientId: b3f60ea0-79a9-11e6-ab44-02f305dabccf
                    enrollments:
                      enrollments:
                        - enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                          clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                          source: '2016'
                          link: >-
                            hmis-clientapi/v2016/rest/clients/6bf95840-8567-469b-9efe-8c6351294e55/enrollments/637fbfbb-e75c-49f1-900f-1aa0015aefab
                        - enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                          clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                          source: '2015'
                          link: >-
                            hmis-clientapi/v2015/rest/clients/d4a9b184-21ea-4136-b9b8-0d59e8ee7b71/enrollments/d12a5b43-9411-4fe3-8cd3-0778459d0085
      description: Create a global enrollment for a client
      operationId: POST_dep_clients-clientDedupId-global-enrollments
      requestBody:
        content:
          application/json:
            example:
              globalEnrollment:
                enrollments:
                  enrollments:
                    - enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                      source: '2016'
                      clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                    - enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                      source: '2015'
                      clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
            schema:
              {
                "type": "object",
                "required": [
                  "globalEnrollment"
                ],
                "properties": {
                  "globalEnrollment": {
                    "type": "object",
                    "required": [
                      "enrollments"
                    ],
                    "properties": {
                      "enrollments": {
                        "type": "object",
                        "required": [
                          "enrollments"
                        ],
                        "properties": {
                          "enrollments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "enrollmentId",
                                "source",
                                "clientId"
                              ],
                              "properties": {
                                "enrollmentId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "source": {
                                  "type": "string",
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    get:
      deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollments"
                    ],
                    "properties": {
                      "globalEnrollments": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalEnrollments"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalEnrollments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "dedupClientId",
                                "enrollments"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "dedupClientId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "enrollments": {
                                  "type": "object",
                                  "required": [
                                    "enrollments"
                                  ],
                                  "properties": {
                                    "enrollments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "id",
                                          "enrollmentId",
                                          "clientId",
                                          "source",
                                          "link"
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "enrollmentId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "source": {
                                            "type": "string",
                                          },
                                          "link": {
                                            "type": "string",
                                            "format": "uuid",
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollments:
                    pagination:
                      from: 0
                      returned: 1
                      total: 1
                      maximum: 30
                      sort: {}
                    globalEnrollments:
                      - id: a2919645-c366-49b9-a101-3b803fa15d3d
                        dedupClientId: b3f60ea0-79a9-11e6-ab44-02f305dabccf
                        enrollments:
                          enrollments:
                            - id: 0ffdf949-b799-43d3-82ca-506478274a74
                              enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                              clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                              source: '2016'
                              link: >-
                                hmis-clientapi/v2016/rest/clients/6bf95840-8567-469b-9efe-8c6351294e55/enrollments/637fbfbb-e75c-49f1-900f-1aa0015aefab
                            - id: 183b0b94-9d14-44ad-ad98-9408b328230d
                              enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                              clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                              source: '2015'
                              link: >-
                                hmis-clientapi/v2015/rest/clients/d4a9b184-21ea-4136-b9b8-0d59e8ee7b71/enrollments/d12a5b43-9411-4fe3-8cd3-0778459d0085
      description: Get all global enrollment
      operationId: GET_dep_clients-clientDedupId-global-enrollments
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/global-enrollments/{globalenrollmentid}':
    get:
      deprecated: true
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollment"
                    ],
                    "properties": {
                      "globalEnrollment": {
                        "type": "object",
                        "required": [
                          "id",
                          "dedupClientId",
                          "enrollments"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "dedupClientId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "enrollments": {
                            "type": "object",
                            "required": [
                              "enrollments"
                            ],
                            "properties": {
                              "enrollments": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "enrollmentId",
                                    "clientId",
                                    "source",
                                    "link"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "enrollmentId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "clientId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "source": {
                                      "type": "string",
                                    },
                                    "link": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollment:
                    id: a2919645-c366-49b9-a101-3b803fa15d3d
                    dedupClientId: b3f60ea0-79a9-11e6-ab44-02f305dabccf
                    enrollments:
                      enrollments:
                        - id: 0ffdf949-b799-43d3-82ca-506478274a74
                          enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                          clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                          source: '2016'
                          link: >-
                            hmis-clientapi/v2016/rest/clients/6bf95840-8567-469b-9efe-8c6351294e55/enrollments/637fbfbb-e75c-49f1-900f-1aa0015aefab
                        - id: 183b0b94-9d14-44ad-ad98-9408b328230d
                          enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                          clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
                          source: '2015'
                          link: >-
                            hmis-clientapi/v2015/rest/clients/d4a9b184-21ea-4136-b9b8-0d59e8ee7b71/enrollments/d12a5b43-9411-4fe3-8cd3-0778459d0085
      description: Get selected global enrollment
      operationId: GET_dep_clients-clientDedupId-global-enrollments-globalenrollmentid
    delete:
      deprecated: true
      responses:
        default:
          description: ''
      description: Delete selected global enrollment
      operationId: DELETE_dep_clients-clientDedupId-global-enrollments-globalenrollmentid
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
      - name: globalenrollmentid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/global-enrollments/{globalenrollmentid}/enrollments':
    put:
      deprecated: true
      responses:
        '200':
          description: ''
      description: Add enrollment to selected global enrollment
      operationId: >-
        PUT_dep_clients-clientDedupId-global-enrollments-globalenrollmentid-enrollments
      requestBody:
        content:
          application/json:
            example:
              enrollments:
                enrollments:
                  - enrollmentId: 637fbfbb-e75c-49f1-900f-1aa0015aefab
                    source: '2016'
                    clientId: 6bf95840-8567-469b-9efe-8c6351294e55
                  - enrollmentId: d12a5b43-9411-4fe3-8cd3-0778459d0085
                    source: '2015'
                    clientId: d4a9b184-21ea-4136-b9b8-0d59e8ee7b71
            schema:
              {
                "type": "object",
                "required": [
                  "enrollments"
                ],
                "properties": {
                  "enrollments": {
                    "type": "object",
                    "required": [
                      "enrollments"
                    ],
                    "properties": {
                      "enrollments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "enrollmentId",
                            "source",
                            "clientId"
                          ],
                          "properties": {
                            "enrollmentId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "source": {
                              "type": "string",
                            },
                            "clientId": {
                              "type": "string",
                              "format": "uuid",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
      - name: globalenrollmentid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientdedupid}/global-enrollments/{globalenrollmentid}/enrollments/{enrollmentid}':
    delete:
      deprecated: true
      responses:
        '200':
          description: ''
      description: Remove enrollment from selected global enrollment
      operationId: >-
        DELETE_dep_clients-clientDedupId-global-enrollments-globalenrollmentid-enrollments-enrollmentId
    parameters:
      - name: clientdedupid
        in: path
        required: true
        schema:
          type: string
      - name: globalenrollmentid
        in: path
        required: true
        schema:
          type: string
      - name: enrollmentid
        in: path
        required: true
        schema:
          type: string
  /events:
    post:
      responses:
        '200':
          description: ''
        '400':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "errors"
                    ],
                    "properties": {
                      "errors": {
                        "type": "object",
                        "required": [
                          "error"
                        ],
                        "properties": {
                          "error": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "message"
                              ],
                              "properties": {
                                "message": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  errors:
                    error:
                      - message: event type is required
      description: >-
                API to create a Event. An event can be handled either via messaging system (pub/sub model) or by other handlers depending on the event type. Currently supported event type is client.merge, client.unmerge
      operationId: POST_events
      requestBody:
        content:
          application/json:
               schema:
                 {
                   "type": "object",
                   "required": [
                     "event"
                   ],
                   "properties": {
                     "event": {
                       "type": "object",
                       "required": [
                         "payload",
                         "eventType"
                       ],
                       "properties": {
                         "payload": {
                           "type": "object",
                           "required": [
                             "projectGroupCode",
                             "currentDedupId",
                             "targetDedupId"
                           ],
                           "properties": {
                             "projectGroupCode": {
                               "type": "string",
                             },
                             "currentDedupId": {
                               "type": "string",
                               "format": "uuid",
                             },
                             "targetDedupId": {
                               "type": "string",
                               "format": "uuid",
                             }
                           }
                         },
                         "eventType": {
                           "type": "string",
                         }
                       }
                     }
                   }
                 }
               example:
                    event:
                      payload:
                        projectGroupCode: PG0001
                        currentDedupId: 46b89200-656a-11e8-985f-02fe61f7863e
                        targetDedupId: eac0fc00-f727-11e6-bdda-06c37be0e663
                      eventType: client.merge
        required: true
  /clients/{clientid}/dedup/merge:
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "client"
                    ],
                    "properties": {
                      "client": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "clientId",
                            "dedupClientId",
                            "oldDedupClientId",
                            "firstName",
                            "lastName",
                            "ssn",
                            "dob"
                          ],
                          "properties": {
                            "clientId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "dedupClientId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "oldDedupClientId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "firstName": {
                              "type": "string",
                            },
                            "lastName": {
                              "type": "string",
                            },
                            "ssn": {
                              "type": "string",
                            },
                            "dob": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  client:
                    - clientId: b42e7c50-c72a-11e9-a57b-02fe61f7863e
                      dedupClientId: 64834220-6727-11e9-9f34-02fe61f7863e
                      oldDedupClientId: 1ba28d40-1dfd-11e9-985f-02fe61f7863e
                      firstName: Przemyslaw1
                      lastName: Gorecki
                      ssn: 123-45-6789
                      dob: 1459517834983
        '400':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "errors"
                    ],
                    "properties": {
                      "errors": {
                        "type": "object",
                        "required": [
                          "error"
                        ],
                        "properties": {
                          "error": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "message"
                              ],
                              "properties": {
                                "message": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  errors:
                    error:
                      - message: Client Id is requried.
      description: >-
                Client merge is a 2 step process and this API covers step# 1.
                1) API to determine a correct dedupClientId for a client.
                2) Use /events API to merge a client by providing the dedupClientId generated from the response.
      operationId: POST_clients-clientId-dedup-merge
      requestBody:
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "client"
                  ],
                  "properties": {
                    "client": {
                      "type": "object",
                      "required": [
                        "clientId",
                        "firstName",
                        "lastName",
                        "ssn",
                        "dob"
                      ],
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "firstName": {
                          "type": "string",
                        },
                        "lastName": {
                          "type": "string",
                        },
                        "ssn": {
                          "type": "string",
                        },
                        "dob": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              example:
                  client:
                    clientId : b42e7c50-c72a-11e9-a57b-02fe61f7863e
                    firstName: Przemyslaw1
                    lastName: Gorecki
                    ssn: 123-45-6789
                    dob: 1459517834983
        required: true
    parameters:
      - name: clientid
        in: path
        required: true
        schema:
          type: string
  /clients/{clientid}/dedup/unmerge:
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "client"
                    ],
                    "properties": {
                      "client": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "clientId",
                            "dedupClientId",
                            "oldDedupClientId",
                            "firstName",
                            "lastName",
                            "ssn",
                            "dob"
                          ],
                          "properties": {
                            "clientId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "dedupClientId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "oldDedupClientId": {
                              "type": "string",
                              "format": "uuid",
                            },
                            "firstName": {
                              "type": "string",
                            },
                            "lastName": {
                              "type": "string",
                            },
                            "ssn": {
                              "type": "string",
                            },
                            "dob": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  client:
                    - clientId: b42e7c50-c72a-11e9-a57b-02fe61f7863e
                      dedupClientId: 1ba28d40-1dfd-11e9-985f-02fe61f7863e
                      oldDedupClientId: 64834220-6727-11e9-9f34-02fe61f7863e
                      firstName: Przemyslaw1
                      lastName: Gorecki
                      ssn: 123-45-6789
                      dob: 1459517834983
        '400':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "errors"
                    ],
                    "properties": {
                      "errors": {
                        "type": "object",
                        "required": [
                          "error"
                        ],
                        "properties": {
                          "error": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "message"
                              ],
                              "properties": {
                                "message": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  errors:
                    error:
                      - message: Client Id is requried.
      description: >-
                          Client unmerge is a 2 step process and this API covers step# 1.
                          1) API to determine a correct dedupClientId for a client.
                          2) Use /events API to unmerge a client by providing the dedupClientId generated from the response.
      operationId: POST_clients-clientId-dedup-unmerge
      requestBody:
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "client"
                  ],
                  "properties": {
                    "client": {
                      "type": "object",
                      "required": [
                        "clientId",
                        "firstName",
                        "lastName",
                        "ssn",
                        "dob"
                      ],
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "firstName": {
                          "type": "string",
                        },
                        "lastName": {
                          "type": "string",
                        },
                        "ssn": {
                          "type": "string",
                        },
                        "dob": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              example:
                  client:
                    clientId : b42e7c50-c72a-11e9-a57b-02fe61f7863e
                    firstName: Przemyslaw1
                    lastName: Gorecki
                    ssn: 123-45-6789
                    dob: 1459517834983
        required: true
    parameters:
      - name: clientid
        in: path
        required: true
        schema:
          type: string
  /notifications:
    post:
      responses:
        '200':
          description: ''
        '400':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "errors"
                    ],
                    "properties": {
                      "errors": {
                        "type": "object",
                        "required": [
                          "error"
                        ],
                        "properties": {
                          "error": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "message"
                              ],
                              "properties": {
                                "message": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  errors:
                    error:
                      - message: Email body is required
      description: >-
        API to create a notification request. Any one of the recipients is
        mandatory (TO, CC or BCC). Multiple email addresses should be comma
        delimeted. "Body" and "Subject" are mandatory fields. Notification can
        be sent with "HIGH" priority by setting the "priority" value to 1. None
        of the elements with in "additionalInfo" section are mandatory.
      operationId: POST_notifications
      requestBody:
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "notification"
                  ],
                  "properties": {
                    "notification": {
                      "type": "object",
                      "required": [
                        "method",
                        "data",
                        "additionalInfo"
                      ],
                      "properties": {
                        "method": {
                          "type": "string",
                        },
                        "data": {
                          "type": "object",
                          "required": [
                            "recipients",
                            "body",
                            "subject",
                            "priority"
                          ],
                          "properties": {
                            "recipients": {
                              "type": "object",
                              "required": [
                                "toRecipients",
                                "bccRecipients",
                                "ccRecipients"
                              ],
                              "properties": {
                                "toRecipients": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                  }
                                },
                                "bccRecipients": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                  }
                                },
                                "ccRecipients": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                  }
                                }
                              }
                            },
                            "body": {
                              "type": "string",
                            },
                            "subject": {
                              "type": "string",
                            },
                            "priority": {
                              "type": "integer"
                            }
                          }
                        },
                        "additionalInfo": {
                          "type": "object",
                          "required": [
                            "messageType",
                            "recipientType",
                            "recipientId"
                          ],
                          "properties": {
                            "messageType": {
                              "type": "string",
                            },
                            "recipientType": {
                              "type": "string",
                            },
                            "recipientId": {
                              "type": "string",
                              "format": "uuid",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                notification:
                  method: EMAIL
                  data:
                    recipients:
                      toRecipients:
                        - surya.yadavalli@gmail.com
                        - surya.yadavalli@hmislynk.com
                      bccRecipients:
                        - jceleldon@ctagroup.com
                      ccRecipients:
                        - admin@ctagroup.com
                    body: Test message
                    subject: Test subject
                    priority: 1
                  additionalInfo:
                    messageType: Cancellation Notice
                    recipientType: clientID
                    recipientId: 18a93ad8-cced-49c5-9185-9cb3da9de89b
        required: true
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "notifications"
                    ],
                    "properties": {
                      "notifications": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "notifications"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "notifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "data",
                                "method",
                                "additionalInfo",
                                "createdTimeStamp",
                                "lastStatusTimeStamp"
                              ],
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "required": [
                                    "subject",
                                    "status",
                                    "recipients",
                                    "body",
                                    "parameters"
                                  ],
                                  "properties": {
                                    "subject": {
                                      "type": "string",
                                    },
                                    "status": {
                                      "type": "string",
                                    },
                                    "recipients": {
                                      "type": "object",
                                      "required": [
                                        "toRecipients",
                                        "bccRecipients",
                                        "ccRecipients"
                                      ],
                                      "properties": {
                                        "toRecipients": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                          }
                                        },
                                        "bccRecipients": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                          }
                                        },
                                        "ccRecipients": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                          }
                                        }
                                      }
                                    },
                                    "body": {
                                      "type": "string",
                                    },
                                    "parameters": {
                                      "type": "object",
                                      "required": [
                                        "parameter"
                                      ],
                                      "properties": {
                                        "parameter": {
                                          "type": "array"
                                        }
                                      }
                                    }
                                  }
                                },
                                "method": {
                                  "type": "string",
                                },
                                "additionalInfo": {
                                  "type": "object",
                                  "required": [
                                    "recipientType",
                                    "recipientId",
                                    "messageType"
                                  ],
                                  "properties": {
                                    "recipientType": {
                                      "type": "string",
                                    },
                                    "recipientId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "messageType": {
                                      "type": "string",
                                    }
                                  }
                                },
                                "createdTimeStamp": {
                                  "type": "string",
                                },
                                "lastStatusTimeStamp": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  notifications:
                    pagination:
                      from: 0
                      total: 13
                      maximum: 2
                      sort: {}
                    notifications:
                      - data:
                          subject: Test subject
                          status: CREATED
                          recipients:
                            toRecipients:
                              - surya.yadavalli@gmail.com
                            bccRecipients:
                              - surya.yadavalli@gmail.com
                            ccRecipients:
                              - surya.yadavalli@gmail.com
                          body: Test message
                          parameters:
                            parameter: []
                        method: EMAIL
                        additionalInfo:
                          recipientType: Client
                          recipientId: 6997cbb0-4485-4ac8-9a40-f8099726c9e3
                          messageType: message type
                        createdTimeStamp: '01-21-2018 09:54'
                        lastStatusTimeStamp: '01-21-2018 09:54'
                      - data:
                          subject: Test subject
                          status: FAILED
                          statusMessage: Invalid recipient email address
                          recipients:
                            toRecipients:
                              - surya.yadavalli@gmail.com
                            bccRecipients:
                              - surya.yadavalli@gmail.com
                              - support@hslynk.com
                            ccRecipients:
                              - surya.yadavalli@gmail.com
                          body: Test message
                          parameters:
                            parameter: []
                        method: EMAIL
                        additionalInfo:
                          recipientType: ClientId
                          recipientId: 6997cbb0-4485-4ac8-9a40-f8099726c9e3
                          messageType: Cancellation Notice
                        createdTimeStamp: '01-21-2018 21:02'
                        lastStatusTimeStamp: '01-21-2018 21:02'
      description: >2-
         GET the notification details along with their current status and timestamps. These details can be filtered using the following query parameters. Few examples below

        * hmis-globalapi/rest/notifications?fromdate=1516546276760 - Returns all
        the notifications sent from Sun Jan 21 2018 14:51:16


        *
        hmis-globalapi/rest/notifications?fromdate=1516521600000&todate=1516693923129
        - Returns all notifications sent between Sun Jan 21 2018 08:00:00 and
        Tue Jan 23 2018 07:52:03


        * hmis-globalapi/rest/notifications?status=CREATED,DELIVERED - Returns
        all notifications that are with status CREATED and DELIVERED


        *
        hmis-globalapi/rest/notifications?recipienttype=clientid&recipientid=cf98b9b2-9a77-4133-99a3-b60f05a12ad1
        - Returns all notifications associated with the client Id
        cf98b9b2-9a77-4133-99a3-b60f05a12ad1


        *
        hmis-globalapi/rest/notifications?status=DELIVERED&recipienttype=clientid&recipientid=cf98b9b2-9a77-4133-99a3-b60f05a12ad1
        - Returns all notifications delivered to client Id
        cf98b9b2-9a77-4133-99a3-b60f05a12ad1


        *
        hmis-globalapi/rest/notifications?fromdate=1516546276760&recipienttype=clientid&recipientid=cf98b9b2-9a77-4133-99a3-b60f05a12ad1
        - Returns all notifications associated with the client Id from Sun Jan
        21 2018 14:51:16
      operationId: GET_notifications
      parameters:
        - name: fromdate
          in: query
          description: >
            "From date" in millisecods - This will fetch all the notifications
            starting from this date/time.
          schema:
            type: number
        - name: todate
          in: query
          description: >
            "To date" in millisecods  - This will fetch all the notifications
            until this date / time.
          schema:
            type: number
        - name: recipienttype
          in: query
          description: >-
            Recipient Type - Currently supported recipient Type is only
            "ClientID"
          schema:
            type: string
        - name: recipientid
          in: query
          description: >
            Recipient Id -  The client identifier (UUID) example:
            "cf98b9b2-9a77-4133-99a3-b60f05a12ad1"
          schema:
            type: string
        - name: status
          in: query
          description: >-
            status - Possible statuses that a notification can have CREATED ,
            DELIVERED , FAILED
          schema:
            type: string
        - name: startIndex
          in: query
          description: >-
            The start Index from where the search results should be returned.
            Default - 0
          schema:
            type: number
        - name: maxItems
          in: query
          description: >-
            the number or Items that should be included in the results . Default
            - 200
          schema:
            type: number
  '/clients/{dedupclientid}':
    get:
      operationId: GET_clients-by-dedupClientId
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "clients"
                    ],
                    "properties": {
                      "clients": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "clients"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "total",
                              "maximum",
                              "returned",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "clients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "clientId",
                                "dedupClientId",
                                "firstName",
                                "middleName",
                                "lastName",
                                "nameSuffix",
                                "nameDataQuality",
                                "ssn",
                                "ssnDataQuality",
                                "dob",
                                "dobDataQuality",
                                "race",
                                "ethnicity",
                                "gender",
                                "veteranStatus",
                                "sourceSystemId",
                                "link",
                                "projectGroupCode",
                                "phoneNumber"
                              ],
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "dedupClientId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "firstName": {
                                  "type": "string",
                                },
                                "middleName": {
                                  "type": "string",
                                },
                                "lastName": {
                                  "type": "string",
                                },
                                "nameSuffix": {
                                  "type": "string",
                                },
                                "nameDataQuality": {
                                  "type": "integer"
                                },
                                "ssn": {
                                  "type": "string",
                                },
                                "ssnDataQuality": {
                                  "type": "integer"
                                },
                                "dob": {
                                  "type": "integer"
                                },
                                "dobDataQuality": {
                                  "type": "integer"
                                },
                                "race": {
                                  "type": "integer"
                                },
                                "ethnicity": {
                                  "type": "integer"
                                },
                                "gender": {
                                  "type": "integer"
                                },
                                "veteranStatus": {
                                  "type": "integer"
                                },
                                "sourceSystemId": {
                                  "type": "string",
                                },
                                "link": {
                                  "type": "string"
                                },
                                "projectGroupCode": {
                                  "type": "string",
                                },
                                "phoneNumber": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                   clients:
                      pagination:
                        from: 0
                        total: 2
                        maximum: 30
                        returned: 2
                        sort: {}
                      clients:
                      - clientId: 79181dff-2acb-45a9-b78f-380b13082af6
                        dedupClientId: 1ba28d40-1dfd-11e9-985f-02fe61f7863e
                        firstName: Przemyslaw1
                        middleName: Piotr
                        lastName: Gorecki
                        nameSuffix: undefined
                        nameDataQuality: 1
                        ssn: 111-11-1234
                        ssnDataQuality: 1
                        dob: 315513000000
                        dobDataQuality: 1
                        race: 5
                        ethnicity: 0
                        gender: 1
                        veteranStatus: 1
                        sourceSystemId: FzFxvqMDjE8w2nAMP
                        link: "/hmis-clientapi/rest/v2015/clients/79181dff-2acb-45a9-b78f-380b13082af6"
                        projectGroupCode: PG0001
                        phoneNumber: "+919440060881"
                      - clientId: 8524af9d-e561-4417-b656-fc5a5c5bcf32
                        dedupClientId: 1ba28d40-1dfd-11e9-985f-02fe61f7863e
                        firstName: First Name
                        middleName: Middle Name
                        lastName: LAST NAME
                        nameSuffix: NS
                        nameDataQuality: 1
                        ssn: 123-45-6789
                        ssnDataQuality: 1
                        dob: 1459498034983
                        dobDataQuality: 1
                        race: 1
                        ethnicity: 1
                        gender: 1
                        otherGender: Test
                        veteranStatus: 8
                        sourceSystemId: FzFxvqMDjE8w2nAMP
                        link: "/hmis-clientapi/rest/v2015/clients/8524af9d-e561-4417-b656-fc5a5c5bcf32"
                        projectGroupCode: PG0001
        '404':
         description: DedupClientId not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: DedupClientId not found 2ba28d40-1dfd-11e9-985f-02fe61f7863e
    parameters:
      - name: dedupclientid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientid}/consents':
    post:
      tags: 
        - consents
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:                
                    example:
                        consent:
                          clientId: dcdf2326-0d96-43eb-8368-501b29145c53
                          startTime: 1519914315641
                          endTime: 1543602600000
                          globalProjects:
                          - id: 4b84cb25-d27e-458e-ad5d-d817f30390d2
                            projects:
                              - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                                source: '2015'
                                link: "/hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f"
                              - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                                source: '2014'
                                link: "/hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61"
                          consentId: db51219d-f439-4250-bdf2-7a1a07816832
                          consnetDocument:
                            link: "/hmis-globalapi/rest/clients/dcdf2326-0d96-43eb-8368-501b29145c53/consents/db51219d-f439-4250-bdf2-7a1a07816832/documents"
      description: Create client consents
      operationId: POST_clients-clientId-consents
      requestBody:
        content:
          application/json:
            example:
              consent:
                clientId: dcdf2326-0d96-43eb-8368-501b29145c53
                startTime: 1519914315641
                endTime: 1543602600000
                globalProjects:
                  - id: 4b84cb25-d27e-458e-ad5d-d817f30390d2
            schema:
              {
                "type": "object",
                "required": [
                  "consent"
                ],
                "properties": {
                  "consent": {
                    "type": "object",
                    "required": [
                      "clientId",
                      "startTime",
                      "endTime",
                      "globalProjects"
                    ],
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "format": "uuid",
                      },
                      "startTime": {
                        "type": "integer"
                      },
                      "endTime": {
                        "type": "integer"
                      },
                      "globalProjects": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    get:
      tags: 
        - consents    
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  example:
                    consents:
                      pagination:
                        from: 0
                        returned: 1
                        total: 1
                        maximum: 30
                        sort: {}
                      consents:
                      - clientId: dcdf2326-0d96-43eb-8368-501b29145c53
                        startTime: 1519914315641
                        endTime: 1543602600000
                        globalProjects:
                        - id: 4b84cb25-d27e-458e-ad5d-d817f30390d2
                          projectName: Project Name
                          projectCommonName: Project common name
                          description: " description"
                          projects:
                            - projectId: f9748a7b-80ac-4ffd-86f7-c8e71416502f
                              source: '2015'
                              link: "/hmis-clientapi/v2015/rest/projects/f9748a7b-80ac-4ffd-86f7-c8e71416502f"
                            - projectId: 9a147cc3-7b78-4a82-abe4-f42f9ee59b61
                              source: '2014'
                              link: "/hmis-clientapi/v2014/rest/projects/9a147cc3-7b78-4a82-abe4-f42f9ee59b61"
                        consentId: db51219d-f439-4250-bdf2-7a1a07816832
                        consnetDocument:
                            link: "/hmis-globalapi/rest/clients/dcdf2326-0d96-43eb-8368-501b29145c53/consents/db51219d-f439-4250-bdf2-7a1a07816832/documents"

      description: Get consents of selected client
      operationId: GET_clients-clientId-consents
    parameters:
      - name: clientid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientid}/consents/{consentid}':
    put:
      tags: 
        - consents    
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example: ''
      description: Update a client's consent
      operationId: PUT_clients-clientId-consents-consentId
      requestBody:
        content:
          application/json:
            example:
              consent:
                startTime: 1519914315641
                endTime: 1543602600000
            schema:
              {
                "type": "object",
                "required": [
                  "consent"
                ],
                "properties": {
                  "consent": {
                    "type": "object",
                    "required": [
                      "startTime",
                      "endTime"
                    ],
                    "properties": {
                      "startTime": {
                        "type": "integer"
                      },
                      "endTime": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
        required: true
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example: ''
      description: Delete a client's consent
      operationId: DELETE_clients-clientId-consents-consentId
    parameters:
      - name: clientid
        in: path
        required: true
        schema:
          type: string
      - name: consentid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientid}/consents/{consentid}/projects':
    put:
      tags: 
        - consents    
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example: ''
      description: Add global projects to a client
      operationId: PUT_clients-clientId-consents-consentId-projects
      requestBody:
        content:
          application/json:
            example:
              globalProjects:
                globalProjects:
                  - id: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
            schema:
              {
                "type": "object",
                "required": [
                  "globalProjects"
                ],
                "properties": {
                  "globalProjects": {
                    "type": "object",
                    "required": [
                      "globalProjects"
                    ],
                    "properties": {
                      "globalProjects": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
        required: true
    parameters:
      - name: clientid
        in: path
        required: true
        schema:
          type: string
      - name: consentid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientid}/consents/{consentid}/projects/{projectid}':
    delete:
      tags: 
        - consents    
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example: ''
      description: Remove global project from a client consent
      operationId: DELETE_clients-clientId-consents-consentId-projects-globalProjectId
    parameters:
      - name: clientid
        in: path
        required: true
        schema:
          type: string
      - name: consentid
        in: path
        required: true
        schema:
          type: string
      - name: projectid
        in: path
        required: true
        schema:
          type: string
  '/clients/{clientid}/consents/{consentid}/documents':
    post:
      tags: 
        - consents    
      responses:
        '201':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              example:
                errors:
                  - code: CLIENT_CONSENT_NOT_FOUND
                    message: >-
                      Client consent not found :
                      e9a4a447-833f-4c29-a3b6-f966a0a753aa
              schema:
                {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                          },
                          "message": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                }
      description: >
        Uploads the consent document (Verbal / signed document) for the client
        for a specific consent.  The content type should be multipart/form-data
        ( Content-Type: multipart/form-data).
      operationId: POST_clients-clientid-consents-consentid-documents
      requestBody:
        content:
          multipart/form-data:
              schema:           
                type: object
                properties:     
                  file: 
                    type: string
                    format: binary
              encoding:
                    file:
                      contentType: text/plain       
        required: true
    get:
      tags: 
        - consents    
      responses:
        '200':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              example:
                errors:
                  - code: CLIENT_CONSENT_NOT_FOUND
                    message: >-
                      Client consent not found :
                      e9a4a447-833f-4c29-a3b6-f966a0a753aa
              schema:
                {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                          },
                          "message": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                }
      description: |
        Download the consent document associated with a specific consent.
      operationId: GET_clients-clientid-consents-consentid-documents
    parameters:
      - name: consentid
        in: path
        required: true
        schema:
          type: string
      - name: clientid
        in: path
        required: true
        schema:
          type: string          
  '/genericenrollments':
    post:
      description: Create a Generic Enrllment
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "genericEnrollment"
                  ],
                  "properties": {
                    "genericEnrollment": {
                      "type": "object",
                      "properties": {
                        "globalEnrollmentId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "globalProjectId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "startTime": {
                          "type": "string",
                        },
                        "endTime": {
                          "type": "string",
                        },
                        "globalHouseholdId": {
                          "type": "string",
                          "format": "uuid",
                        }
                      }
                    }
                  }
                }
              example:
                genericEnrollment:
                  globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                  globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                  active: true
                  startTime: 08-09-2018 10:11
                  endTime: 08-09-2019 10:11
                  globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "genericEnrollment"
                    ],
                    "properties": {
                      "genericEnrollment": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalEnrollmentId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalProjectId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "globalHouseholdId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "startTime": {
                            "type": "string",
                          },
                          "endTime": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                example:
                  genericEnrollment:
                    id: 39f899ae-e21c-4c81-ab2f-d166ae0d79e7
                    globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                    globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                    active: true
                    globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                    startTime: 08-09-2018 10:11
                    endTime: 08-09-2019 10:11
        '404':
         description: Global Project not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Project not found
    get:
      description: Read all generic enrollment of a project group
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollments"
                    ],
                    "properties": {
                      "globalEnrollments": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalEnrollments"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalEnrollments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "globalEnrollmentId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "globalProjectId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "active": {
                                  "type": "boolean"
                                },
                                "globalHouseholdId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "startTime": {
                                  "type": "string",
                                },
                                "endTime": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollments:
                    pagination:
                      from: 0
                      returned: 3
                      total: 3
                      maximum: 30
                      sort: {}
                    globalEnrollments:
                    - id: b2ae7fd1-9782-46cf-89fd-9a730f3c0189
                      globalEnrollmentId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      globalProjectId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      active: true
                      globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      startTime: 08-09-2018 10:11
                      endTime: 08-09-2019 10:11
                    - id: 3586814f-9601-498a-98de-1adabf610936
                      globalEnrollmentId: 158d2457-5fd7-49b4-82ff-2549cf0ea397
                      globalProjectId: 158d2457-5fd7-49b4-82ff-2549cf0ea396
                      active: true
                      globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea398
                      startTime: 08-09-2017 10:11
                      endTime: 08-09-2020 10:11
                    - id: 39f899ae-e21c-4c81-ab2f-d166ae0d79e7
                      globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                      globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                      active: true
                      globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      startTime: 08-09-2018 10:11
                      endTime: 08-09-2020 10:11
  '/genericenrollments/{genericenrollmentid}':
    parameters:
      - name: genericenrollmentid
        in: path
        required: true
        schema:
          type: string
          format: "UUID"
    put:
      description: Update existing genric enrollment
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "genericEnrollment"
                  ],
                  "properties": {
                    "genericEnrollment": {
                      "type": "object",
                      "properties": {
                        "globalEnrollmentId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "globalProjectId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "startTime": {
                          "type": "string",
                        },
                        "endTime": {
                          "type": "string",
                        },
                        "globalHouseholdId": {
                          "type": "string",
                          "format": "uuid",
                        }
                      }
                    }
                  }
                }
              example:
                genericEnrollment:
                  globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                  globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                  active: true
                  startTime: 08-09-2018 10:11
                  endTime: 08-09-2019 10:11
                  globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
      responses:
        '200':
          description: Success
        '404':
         description: Generic Enrollment not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Generic enrollment not found
    delete:
      description: Delete existing generic enrollment
      responses:
        '200':
         description: Success
        '404':
         description: Generic Enrollment not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Generic enrollment not found
    get:
     description: Read existing generic enrollment
     responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "genericEnrollment"
                    ],
                    "properties": {
                      "genericEnrollment": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalEnrollmentId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalProjectId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "globalHouseholdId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "startTime": {
                            "type": "string",
                          },
                          "endTime": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                example:
                  genericEnrollment:
                    id: 39f899ae-e21c-4c81-ab2f-d166ae0d79e7
                    globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                    globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                    active: true
                    globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                    startTime: 08-09-2018 10:11
                    endTime: 08-09-2019 10:11
        '404':
         description: Generic Enrollment not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Generic Enrollment not found
  '/generic-enrollments':
    post:
      deprecated: true
      description: Create a Generic Enrllment
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "genericEnrollment"
                  ],
                  "properties": {
                    "genericEnrollment": {
                      "type": "object",
                      "properties": {
                        "globalEnrollmentId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "globalProjectId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "startTime": {
                          "type": "string",
                        },
                        "endTime": {
                          "type": "string",
                        },
                        "globalHouseholdId": {
                          "type": "string",
                          "format": "uuid",
                        }
                      }
                    }
                  }
                }
              example:
                genericEnrollment:
                  globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                  globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                  active: true
                  startTime: 08-09-2018 10:11
                  endTime: 08-09-2019 10:11
                  globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "genericEnrollment"
                    ],
                    "properties": {
                      "genericEnrollment": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalEnrollmentId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalProjectId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "globalHouseholdId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "startTime": {
                            "type": "string",
                          },
                          "endTime": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                example:
                  genericEnrollment:
                    id: 39f899ae-e21c-4c81-ab2f-d166ae0d79e7
                    globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                    globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                    active: true
                    globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                    startTime: 08-09-2018 10:11
                    endTime: 08-09-2019 10:11
        '404':
         description: Global Project not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Project not found
    get:
      deprecated: true
      description: Read all generic enrollment of a project group
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalEnrollments"
                    ],
                    "properties": {
                      "globalEnrollments": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalEnrollments"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalEnrollments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "globalEnrollmentId",
                                "globalProjectId",
                                "active",
                                "globalHouseholdId",
                                "startTime",
                                "endTime"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "globalEnrollmentId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "globalProjectId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "active": {
                                  "type": "boolean"
                                },
                                "globalHouseholdId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "startTime": {
                                  "type": "string",
                                },
                                "endTime": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalEnrollments:
                    pagination:
                      from: 0
                      returned: 3
                      total: 3
                      maximum: 30
                      sort: {}
                    globalEnrollments:
                    - id: b2ae7fd1-9782-46cf-89fd-9a730f3c0189
                      globalEnrollmentId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      globalProjectId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      active: true
                      globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      startTime: 08-09-2018 10:11
                      endTime: 08-09-2019 10:11
                    - id: 3586814f-9601-498a-98de-1adabf610936
                      globalEnrollmentId: 158d2457-5fd7-49b4-82ff-2549cf0ea397
                      globalProjectId: 158d2457-5fd7-49b4-82ff-2549cf0ea396
                      active: true
                      globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea398
                      startTime: 08-09-2017 10:11
                      endTime: 08-09-2020 10:11
                    - id: 39f899ae-e21c-4c81-ab2f-d166ae0d79e7
                      globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                      globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                      active: true
                      globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                      startTime: 08-09-2018 10:11
                      endTime: 08-09-2020 10:11
  '/generic-enrollments/{genericenrollmentid}':
    parameters:
      - name: genericenrollmentid
        in: path
        required: true
        schema:
          type: string
          format: "UUID"
    put:
      deprecated: true
      description: Update existing genric enrollment
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "genericEnrollment"
                  ],
                  "properties": {
                    "genericEnrollment": {
                      "type": "object",
                      "required": [
                        "globalEnrollmentId",
                        "globalProjectId",
                        "active",
                        "startTime",
                        "endTime",
                        "globalHouseholdId"
                      ],
                      "properties": {
                        "globalEnrollmentId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "globalProjectId": {
                          "type": "string",
                          "format": "uuid",
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "startTime": {
                          "type": "string",
                        },
                        "endTime": {
                          "type": "string",
                        },
                        "globalHouseholdId": {
                          "type": "string",
                          "format": "uuid",
                        }
                      }
                    }
                  }
                }
              example:
                genericEnrollment:
                  globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                  globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                  active: true
                  startTime: 08-09-2018 10:11
                  endTime: 08-09-2019 10:11
                  globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
      responses:
        '200':
          description: Success
        '404':
         description: Generic Enrollment not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Generic enrollment not found
    delete:
      deprecated: true
      description: Delete existing generic enrollment
      responses:
        '200':
         description: Success
        '404':
         description: Generic Enrollment not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Generic enrollment not found
    get:
     deprecated: true
     description: Read existing generic enrollment
     responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "genericEnrollment"
                    ],
                    "properties": {
                      "genericEnrollment": {
                        "type": "object",
                        "required": [
                          "id",
                          "globalEnrollmentId",
                          "globalProjectId",
                          "active",
                          "globalHouseholdId",
                          "startTime",
                          "endTime"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalEnrollmentId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "globalProjectId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "globalHouseholdId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "startTime": {
                            "type": "string",
                          },
                          "endTime": {
                            "type": "string",
                          }
                        }
                      }
                    }
                  }
                example:
                  genericEnrollment:
                    id: 39f899ae-e21c-4c81-ab2f-d166ae0d79e7
                    globalEnrollmentId: 11d0839d-07ca-43e2-add0-5c848a306085
                    globalProjectId: 6c0f6f77-ba6c-4365-9ce5-3fe65ccdbe86
                    active: true
                    globalHouseholdId: 158d2457-5fd7-49b4-82ff-2549cf0ea395
                    startTime: 08-09-2018 10:11
                    endTime: 08-09-2019 10:11
        '404':
         description: Generic Enrollment not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Generic Enrollment not found
  '/globalhouseholds':
    post:
      description: Create a Global house hold
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "globalHousehold"
                  ],
                  "properties": {
                    "globalHousehold": {
                      "type": "object",
                      "required": [
                        "globalHouseholdMappings"
                      ],
                      "properties": {
                        "globalHouseholdMappings": {
                          "type": "object",
                          "required": [
                            "globalHouseholdMappings"
                          ],
                          "properties": {
                            "globalHouseholdMappings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "genericHouseholdId",
                                  "hmisHouseholdId"
                                ],
                                "properties": {
                                  "genericHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  },
                                  "hmisHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                globalHousehold:
                  globalHouseholdMappings:
                    globalHouseholdMappings:
                      - genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc
                        hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc

      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalHousehold"
                    ],
                    "properties": {
                      "globalHousehold": {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          }
                        }
                      }
                    }
                  }
                example:
                  globalHousehold:
                    id: f150e147-eb46-439d-8bea-1e0453c9af31
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
    get:
      description: Read all global Households of a project group
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalHouseholds"
                    ],
                    "properties": {
                      "globalHouseholds": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalHouseholds"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalHouseholds": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "dateUpdated",
                                "dateCreated",
                                "globalHouseholdMappings"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "dateUpdated": {
                                  "type": "string",
                                  "format": "mm-dd-yyyy",
                                },
                                "dateCreated": {
                                  "type": "string",
                                },
                                "globalHouseholdMappings": {
                                  "type": "object",
                                  "required": [
                                    "globalHouseholdMappings"
                                  ],
                                  "properties": {
                                    "globalHouseholdMappings": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "id",
                                          "genericHouseholdId",
                                          "dateUpdated",
                                          "dateCreated"
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "genericHouseholdId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "dateUpdated": {
                                            "type": "string",
                                            "format": "mm-dd-yyyy",
                                          },
                                          "dateCreated": {
                                            "type": "string",
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalHouseholds:
                    pagination:
                      from: 0
                      returned: 2
                      total: 2
                      maximum: 30
                      sort: {}
                    globalHouseholds:
                      - id: f150e147-eb46-439d-8bea-1e0453c9af31
                        dateUpdated: '2018-09-14'
                        dateCreated: '2018-09-14 09:09'
                        globalHouseholdMappings:
                          globalHouseholdMappings:
                            - id: 1d833013-1f36-4b50-97c1-245e1d7bc25b
                              genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9de
                              dateUpdated: '2018-09-14'
                              dateCreated: '2018-09-14 09:09'
                      - id: f150e147-eb46-439d-8bea-1e0453c9af31
                        dateUpdated: '2018-09-14'
                        dateCreated: '2018-09-14 09:09'
                        globalHouseholdMappings:
                          globalHouseholdMappings:
                            - id: 1d833013-1f36-4b50-97c1-245e1d7bc25b
                              hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9ef
                              dateUpdated: '2018-09-14'
                              dateCreated: '2018-09-14 09:09'
  '/globalhouseholds/{globalhouseholdid}':
    parameters:
    - name: globalhouseholdid
      in: path
      required: true
      schema:
        type: string
        format: "UUID"
    put:
      description: Update a Global house hold ( while updating existing mapping will remove and add new mappings )
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "globalHousehold"
                  ],
                  "properties": {
                    "globalHousehold": {
                      "type": "object",
                      "required": [
                        "globalHouseholdMappings"
                      ],
                      "properties": {
                        "globalHouseholdMappings": {
                          "type": "object",
                          "required": [
                            "globalHouseholdMappings"
                          ],
                          "properties": {
                            "globalHouseholdMappings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "genericHouseholdId",
                                  "hmisHouseholdId"
                                ],
                                "properties": {
                                  "genericHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  },
                                  "hmisHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                globalHousehold:
                  globalHouseholdMappings:
                    globalHouseholdMappings:
                      - genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc
                        hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example:
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
    get:
      description: Read selected global Household
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalHousehold"
                    ],
                    "properties": {
                      "globalHousehold": {
                        "type": "object",
                        "required": [
                          "id",
                          "dateUpdated",
                          "dateCreated",
                          "globalHouseholdMappings"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "dateUpdated": {
                            "type": "string",
                            "format": "mm-dd-yyyy",
                          },
                          "dateCreated": {
                            "type": "string",
                          },
                          "globalHouseholdMappings": {
                            "type": "object",
                            "required": [
                              "globalHouseholdMappings"
                            ],
                            "properties": {
                              "globalHouseholdMappings": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "genericHouseholdId",
                                    "hmisHouseholdId",
                                    "dateUpdated",
                                    "dateCreated"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "genericHouseholdId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "hmisHouseholdId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "dateUpdated": {
                                      "type": "string",
                                      "format": "mm-dd-yyyy",
                                    },
                                    "dateCreated": {
                                      "type": "string",
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalHousehold:
                    id: f150e147-eb46-439d-8bea-1e0453c9af31
                    dateUpdated: '2018-09-14'
                    dateCreated: 2018-09-14 09:09
                    globalHouseholdMappings:
                      globalHouseholdMappings:
                      - id: 1d833013-1f36-4b50-97c1-245e1d7bc25b
                        genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9de
                        hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9ef
                        dateUpdated: '2018-09-14'
                        dateCreated: 2018-09-14 09:09
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
    delete:
      description: Delete an existing global house hold and mappings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example:
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
  '/global-Households':
    post:
      deprecated: true
      description: Create a Global house hold
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "globalHousehold"
                  ],
                  "properties": {
                    "globalHousehold": {
                      "type": "object",
                      "required": [
                        "globalHouseholdMappings"
                      ],
                      "properties": {
                        "globalHouseholdMappings": {
                          "type": "object",
                          "required": [
                            "globalHouseholdMappings"
                          ],
                          "properties": {
                            "globalHouseholdMappings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "genericHouseholdId",
                                  "hmisHouseholdId"
                                ],
                                "properties": {
                                  "genericHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  },
                                  "hmisHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                globalHousehold:
                  globalHouseholdMappings:
                    globalHouseholdMappings:
                      - genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc
                        hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc

      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalHousehold"
                    ],
                    "properties": {
                      "globalHousehold": {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          }
                        }
                      }
                    }
                  }
                example:
                  globalHousehold:
                    id: f150e147-eb46-439d-8bea-1e0453c9af31
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
    get:
      deprecated: true
      description: Read all global Households of a project group
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalHouseholds"
                    ],
                    "properties": {
                      "globalHouseholds": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "globalHouseholds"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "globalHouseholds": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "dateUpdated",
                                "dateCreated",
                                "globalHouseholdMappings"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "dateUpdated": {
                                  "type": "string",
                                  "format": "mm-dd-yyyy",
                                },
                                "dateCreated": {
                                  "type": "string",
                                },
                                "globalHouseholdMappings": {
                                  "type": "object",
                                  "required": [
                                    "globalHouseholdMappings"
                                  ],
                                  "properties": {
                                    "globalHouseholdMappings": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "id",
                                          "genericHouseholdId",
                                          "dateUpdated",
                                          "dateCreated"
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "genericHouseholdId": {
                                            "type": "string",
                                            "format": "uuid",
                                          },
                                          "dateUpdated": {
                                            "type": "string",
                                            "format": "mm-dd-yyyy",
                                          },
                                          "dateCreated": {
                                            "type": "string",
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalHouseholds:
                    pagination:
                      from: 0
                      returned: 2
                      total: 2
                      maximum: 30
                      sort: {}
                    globalHouseholds:
                      - id: f150e147-eb46-439d-8bea-1e0453c9af31
                        dateUpdated: '2018-09-14'
                        dateCreated: '2018-09-14 09:09'
                        globalHouseholdMappings:
                          globalHouseholdMappings:
                            - id: 1d833013-1f36-4b50-97c1-245e1d7bc25b
                              genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9de
                              dateUpdated: '2018-09-14'
                              dateCreated: '2018-09-14 09:09'
                      - id: f150e147-eb46-439d-8bea-1e0453c9af31
                        dateUpdated: '2018-09-14'
                        dateCreated: '2018-09-14 09:09'
                        globalHouseholdMappings:
                          globalHouseholdMappings:
                            - id: 1d833013-1f36-4b50-97c1-245e1d7bc25b
                              hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9ef
                              dateUpdated: '2018-09-14'
                              dateCreated: '2018-09-14 09:09'
  '/global-Households/{globalhouseholdid}':
    parameters:
    - name: globalhouseholdid
      in: path
      required: true
      schema:
        type: string
        format: "UUID"
    put:
      deprecated: true
      description: Update a Global house hold ( while updating existing mapping will remove and add new mappings )
      requestBody:
        required: true
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "globalHousehold"
                  ],
                  "properties": {
                    "globalHousehold": {
                      "type": "object",
                      "required": [
                        "globalHouseholdMappings"
                      ],
                      "properties": {
                        "globalHouseholdMappings": {
                          "type": "object",
                          "required": [
                            "globalHouseholdMappings"
                          ],
                          "properties": {
                            "globalHouseholdMappings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "genericHouseholdId",
                                  "hmisHouseholdId"
                                ],
                                "properties": {
                                  "genericHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  },
                                  "hmisHouseholdId": {
                                    "type": "string",
                                    "format": "uuid",
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                globalHousehold:
                  globalHouseholdMappings:
                    globalHouseholdMappings:
                      - genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc
                        hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9cc

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example:
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
    get:
      deprecated: true
      description: Read selected global Household
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "globalHousehold"
                    ],
                    "properties": {
                      "globalHousehold": {
                        "type": "object",
                        "required": [
                          "id",
                          "dateUpdated",
                          "dateCreated",
                          "globalHouseholdMappings"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "dateUpdated": {
                            "type": "string",
                            "format": "mm-dd-yyyy",
                          },
                          "dateCreated": {
                            "type": "string",
                          },
                          "globalHouseholdMappings": {
                            "type": "object",
                            "required": [
                              "globalHouseholdMappings"
                            ],
                            "properties": {
                              "globalHouseholdMappings": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "genericHouseholdId",
                                    "hmisHouseholdId",
                                    "dateUpdated",
                                    "dateCreated"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "genericHouseholdId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "hmisHouseholdId": {
                                      "type": "string",
                                      "format": "uuid",
                                    },
                                    "dateUpdated": {
                                      "type": "string",
                                      "format": "mm-dd-yyyy",
                                    },
                                    "dateCreated": {
                                      "type": "string",
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  globalHousehold:
                    id: f150e147-eb46-439d-8bea-1e0453c9af31
                    dateUpdated: '2018-09-14'
                    dateCreated: 2018-09-14 09:09
                    globalHouseholdMappings:
                      globalHouseholdMappings:
                      - id: 1d833013-1f36-4b50-97c1-245e1d7bc25b
                        genericHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9de
                        hmisHouseholdId: 890ab7f2-f812-4268-b8e5-924766d2d9ef
                        dateUpdated: '2018-09-14'
                        dateCreated: 2018-09-14 09:09
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
    delete:
      deprecated: true
      description: Delete an existing global house hold and mappings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example:
        '404':
         description: Global Household not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Global Household not found
  '/projectsubgroups':
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "projectSubGroup"
                    ],
                    "properties": {
                      "projectSubGroup": {
                        "type": "object",
                        "required": [
                          "projectSubGroupId"
                        ],
                        "properties": {
                          "projectSubGroupId": {
                            "type": "string",
                            "format": "uuid",
                          }
                        }
                      }
                    }
                  }
                example :
                      projectSubGroup:
                          projectSubGroupId: 2b5b3c9b-c649-483f-b5ff-bb1e7cfdb357
      description: |
        To create a new project sub group.
      operationId: POST_projectsubgroups
      requestBody:
        content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "projectSubGroup"
                  ],
                  "properties": {
                    "projectSubGroup": {
                      "type": "object",
                      "required": [
                        "projectSubGroupName"
                      ],
                      "properties": {
                        "projectSubGroupName": {
                          "type": "string",
                        }
                      }
                    }
                  }
                }
              example:
                  projectSubGroup:
                    projectSubGroupName: Test Project SubGroup
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "projectSubGroups"
                    ],
                    "properties": {
                      "projectSubGroups": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "projectSubGroups"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "projectSubGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "projectSubGroupId",
                                "projectSubGroupName",
                                "projects"
                              ],
                              "properties": {
                                "projectSubGroupId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "projectSubGroupName": {
                                  "type": "string",
                                },
                                "projects": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "projectId",
                                      "projectName",
                                      "projectCommonName",
                                      "schemaYear"
                                    ],
                                    "properties": {
                                      "projectId": {
                                        "type": "string",
                                        "format": "uuid",
                                      },
                                      "projectName": {
                                        "type": "string",
                                      },
                                      "projectCommonName": {
                                        "type": "string",
                                      },
                                      "schemaYear": {
                                        "type": "string",
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                    projectSubGroups:
                      pagination:
                        from: 0
                        maximum: 30
                        sort: {}
                      projectSubGroups:
                      - projectSubGroupId: db66b3cd-f470-4978-b66b-4b953a29af2d
                        projectSubGroupName: Updated Test Project SubGroup_1574489246253
                        projects:
                        - projectId: 5f9f2b94-df00-48cc-9bea-cf15941f8be3
                          projectName: ProjectName_1574489245292
                          projectCommonName: ProjectCommonName_1574489245292
                          schemaYear: '2014'

      description: Get all projects sub groups
      operationId: GET_projectsubgroups
  '/projectsubgroups/{projectsubgroupid}':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "projectSubGroup"
                    ],
                    "properties": {
                      "projectSubGroup": {
                        "type": "object",
                        "required": [
                          "projectSubGroupId",
                          "projectSubGroupName",
                          "projects"
                        ],
                        "properties": {
                          "projectSubGroupId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "projectSubGroupName": {
                            "type": "string",
                          },
                          "projects": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "projectId",
                                "projectName",
                                "projectCommonName",
                                "schemaYear"
                              ],
                              "properties": {
                                "projectId": {
                                  "type": "string",
                                  "format": "uuid",
                                },
                                "projectName": {
                                  "type": "string",
                                },
                                "projectCommonName": {
                                  "type": "string",
                                },
                                "schemaYear": {
                                  "type": "string",
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                  projectSubGroup:
                    projectSubGroupId: db66b3cd-f470-4978-b66b-4b953a29af2d
                    projectSubGroupName: Updated Test Project SubGroup_1574489246253
                    projects:
                    - projectId: 5f9f2b94-df00-48cc-9bea-cf15941f8be3
                      projectName: ProjectName_1574489245292
                      projectCommonName: ProjectCommonName_1574489245292
                      schemaYear: '2014'
      description: Get selected project sub group
      operationId: GET_project_subgroup_id
    parameters:
      - name: projectsubgroupid
        in: path
        required: true
        schema:
          type: string
  '/projectsubgroups/{projectsubgroupid}/projects/{projectid}':
    put:
      responses:
        '200':
          description: ''
      description: Add projects to selected global project
      operationId: PUT_project_to_sub_group
    delete:
      responses:
        '200':
          description: ''
      description: Remove project from selected global project
      operationId: DELETE_project_from_sub_group
    parameters:
      - name: projectsubgroupid
        in: path
        required: true
        schema:
          type: string
      - name: projectid
        in: path
        required: true
        schema:
          type: string
  '/projectsharingrules':
    post:
      description: |
      requestBody:
         required: true
         content:
          application/json:
             schema:
               {
                 "type": "object",
                 "required": [
                   "projectSharingRule"
                 ],
                 "properties": {
                   "projectSharingRule": {
                     "type": "object",
                     "required": [
                       "project",
                       "toProject"
                     ],
                     "properties": {
                       "project": {
                         "type": "object",
                         "required": [
                           "projectId"
                         ],
                         "properties": {
                           "projectId": {
                             "type": "string",
                             "format": "uuid",
                           }
                         }
                       },
                       "toProject": {
                         "type": "object",
                         "required": [
                           "projectId"
                         ],
                         "properties": {
                           "projectId": {
                             "type": "string",
                             "format": "uuid",
                           }
                         }
                       }
                     }
                   }
                 }
               }
             example:
                      projectSharingRule:
                        project:
                          projectId: efa47063-bd03-4c5d-ad3f-d99ed57fa055
                        toProject:
                          projectId: ec9fda9b-b962-42f6-b76c-9746b35e567a
      responses:
       '204':
         description: An empty response will send
       '404':
        description: Project not found
        content:
         application/json:
               schema:
                 {
                   "type": "object",
                   "required": [
                     "errors"
                   ],
                   "properties": {
                     "errors": {
                       "type": "object",
                       "required": [
                         "error"
                       ],
                       "properties": {
                         "error": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "required": [
                               "code",
                               "message"
                             ],
                             "properties": {
                               "code": {
                                 "type": "string",
                               },
                               "message": {
                                 "type": "string",
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 }
               example:
                  errors:
                    error:
                    - code: REQUEST_RESOURCE_NOTFOUND
                      message: project not found
       '403':
        description: Unauthorized â€“ The request requires user authentication.
        content:
         application/json:
               schema:
                 {
                   "type": "object",
                   "required": [
                     "errors"
                   ],
                   "properties": {
                     "errors": {
                       "type": "object",
                       "required": [
                         "error"
                       ],
                       "properties": {
                         "error": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "required": [
                               "code",
                               "message"
                             ],
                             "properties": {
                               "code": {
                                 "type": "string",
                               },
                               "message": {
                                 "type": "string",
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 }
               example:
                  errors:
                    error:
                    - code: ACCESS_DENIED
                      message: Unauthorized to perform this action.
    get:
      description: Retrieve all the sharing rules.
      responses:
       '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "projectSharingRules"
                    ],
                    "properties": {
                      "projectSharingRules": {
                        "type": "object",
                        "required": [
                          "pagination",
                          "projectSharingRules"
                        ],
                        "properties": {
                          "pagination": {
                            "type": "object",
                            "required": [
                              "from",
                              "returned",
                              "total",
                              "maximum",
                              "sort"
                            ],
                            "properties": {
                              "from": {
                                "type": "integer"
                              },
                              "returned": {
                                "type": "integer"
                              },
                              "total": {
                                "type": "integer"
                              },
                              "maximum": {
                                "type": "integer"
                              },
                              "sort": {
                                "type": "object"
                              }
                            }
                          },
                          "projectSharingRules": {
                            "type": "object",
                            "required": [
                              "projectSharingRuleId",
                              "project",
                              "toProject"
                            ],
                            "properties": {
                              "projectSharingRuleId": {
                                "type": "string",
                                "format": "uuid",
                              },
                              "project": {
                                "type": "object",
                                "required": [
                                  "projectId"
                                ],
                                "properties": {
                                  "projectId": {
                                    "type": "string",
                                    "format": "uuid",
                                  }
                                }
                              },
                              "toProject": {
                                "type": "object",
                                "required": [
                                  "projectId"
                                ],
                                "properties": {
                                  "projectId": {
                                    "type": "string",
                                    "format": "uuid",
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                      projectSharingRules:
                          pagination:
                            from: 0
                            returned: 2
                            total: 54
                            maximum: 30
                            sort: {}
                          projectSharingRules:
                              projectSharingRuleId:  efa47063-bd03-4c5d-ad3f-d99ed57fa055
                              project:
                                 projectId: efa47063-bd03-4c5d-ad3f-d99ed57fa055
                              toProject:
                                 projectId: ec9fda9b-b962-42f6-b76c-9746b35e567a
       '403':
        description: Unauthorized â€“ The request requires user authentication.
        content:
         application/json:
               schema:
                 {
                   "type": "object",
                   "required": [
                     "errors"
                   ],
                   "properties": {
                     "errors": {
                       "type": "object",
                       "required": [
                         "error"
                       ],
                       "properties": {
                         "error": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "required": [
                               "code",
                               "message"
                             ],
                             "properties": {
                               "code": {
                                 "type": "string",
                               },
                               "message": {
                                 "type": "string",
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 }
               example:
                  errors:
                    error:
                    - code: ACCESS_DENIED
                      message: Unauthorized to perform this action.
  '/projectsharingrules/{projectsharingruleid}':
    parameters:
    - name: projectsharingruleid
      in: path
      required: true
      schema:
        type: string
        format: "UUID"
    get:
      description: Retrieve a specific sharing rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
                schema:
                  {
                    "type": "object",
                    "required": [
                      "projectSharingRule"
                    ],
                    "properties": {
                      "projectSharingRule": {
                        "type": "object",
                        "required": [
                          "projectSharingRuleId",
                          "project",
                          "toProject"
                        ],
                        "properties": {
                          "projectSharingRuleId": {
                            "type": "string",
                            "format": "uuid",
                          },
                          "project": {
                            "type": "object",
                            "required": [
                              "projectId"
                            ],
                            "properties": {
                              "projectId": {
                                "type": "string",
                                "format": "uuid",
                              }
                            }
                          },
                          "toProject": {
                            "type": "object",
                            "required": [
                              "projectId"
                            ],
                            "properties": {
                              "projectId": {
                                "type": "string",
                                "format": "uuid",
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example:
                     projectSharingRule:
                            projectSharingRuleId:  efa47063-bd03-4c5d-ad3f-d99ed57fa055
                            project:
                               projectId: efa47063-bd03-4c5d-ad3f-d99ed57fa055
                            toProject:
                               projectId: ec9fda9b-b962-42f6-b76c-9746b35e567a
        '404':
         description: Resource not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Sharing rule not found
        '403':
         description: Unauthorized â€“ The request requires user authentication.
         content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "required": [
                        "error"
                      ],
                      "properties": {
                        "error": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "code",
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                              },
                              "message": {
                                "type": "string",
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                  errors:
                    error:
                    - code: ACCESS_DENIED
                      message: Unauthorized to perform this action.
    delete:
      description: Delete a specific sharing rule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                example:
        '404':
         description: Sharing rule not found
         content:
          application/json:
            schema:
              {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                            },
                            "message": {
                              "type": "string",
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example:
              errors:
                error:
                - code: REQUEST_RESOURCE_NOTFOUND
                  message: Sharing rule not found
        '403':
         description: Unauthorized â€“ The request requires user authentication.
         content:
          application/json:
              schema:
                {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "required": [
                        "error"
                      ],
                      "properties": {
                        "error": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "code",
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                              },
                              "message": {
                                "type": "string",
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example:
                  errors:
                    error:
                    - code: ACCESS_DENIED
                      message: Unauthorized to perform this action.
components:
  schemas: {}
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    oauth_2_0:
      description: |
        The HMIS API supports OAuth 2.0 for authenticating all API requests.
      type: oauth2
      flows:
        password:
          tokenUrl: 'https://hslynk.com/hmis-authorization-service/rest/token'
          scopes:
            user: ''
            administrator: ''
  links: {}
  callbacks: {}
